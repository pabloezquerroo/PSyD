   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"proyecto.c"
  21              	.Ltext0:
  22              		.file 1 "../proyecto.c"
 2198              		.align	2
 2201              	firemen:
 2202 0000 4000     		.short	64
 2203 0002 2000     		.short	32
 2204 0004 0300     		.short	3
 2205 0006 0000     		.space	2
 2206 0008 2000     		.short	32
 2207 000a B000     		.short	176
 2208 000c 0000260C 		.word	203816960
 2209 0010 8000     		.short	128
 2210 0012 B000     		.short	176
 2211 0014 0000260C 		.word	203816960
 2212 0018 E000     		.short	224
 2213 001a B000     		.short	176
 2214 001c 0000260C 		.word	203816960
 2215              		.global	dummy
 2216              		.align	2
 2219              	dummy:
 2220 0020 2000     		.short	32
 2221 0022 2000     		.short	32
 2222 0024 1300     		.short	19
 2223 0026 0000     		.space	2
 2224 0028 0000     		.short	0
 2225 002a 4000     		.short	64
 2226 002c 0000270C 		.word	203882496
 2227 0030 1000     		.short	16
 2228 0032 6000     		.short	96
 2229 0034 0004270C 		.word	203883520
 2230 0038 2000     		.short	32
 2231 003a 8000     		.short	128
 2232 003c 0008270C 		.word	203884544
 2233 0040 3000     		.short	48
 2234 0042 A000     		.short	160
 2235 0044 000C270C 		.word	203885568
 2236 0048 4000     		.short	64
 2237 004a 8000     		.short	128
 2238 004c 0000270C 		.word	203882496
 2239 0050 5000     		.short	80
 2240 0052 6000     		.short	96
 2241 0054 0004270C 		.word	203883520
 2242 0058 6000     		.short	96
 2243 005a 4000     		.short	64
 2244 005c 0008270C 		.word	203884544
 2245 0060 7000     		.short	112
 2246 0062 6000     		.short	96
 2247 0064 000C270C 		.word	203885568
 2248 0068 8000     		.short	128
 2249 006a 8000     		.short	128
 2250 006c 0000270C 		.word	203882496
 2251 0070 9000     		.short	144
 2252 0072 A000     		.short	160
 2253 0074 0004270C 		.word	203883520
 2254 0078 A000     		.short	160
 2255 007a 8000     		.short	128
 2256 007c 0008270C 		.word	203884544
 2257 0080 B000     		.short	176
 2258 0082 6000     		.short	96
 2259 0084 000C270C 		.word	203885568
 2260 0088 C000     		.short	192
 2261 008a 4000     		.short	64
 2262 008c 0000270C 		.word	203882496
 2263 0090 D000     		.short	208
 2264 0092 6000     		.short	96
 2265 0094 0004270C 		.word	203883520
 2266 0098 E000     		.short	224
 2267 009a 8000     		.short	128
 2268 009c 0008270C 		.word	203884544
 2269 00a0 F000     		.short	240
 2270 00a2 A000     		.short	160
 2271 00a4 000C270C 		.word	203885568
 2272 00a8 0001     		.short	256
 2273 00aa 8000     		.short	128
 2274 00ac 0000270C 		.word	203882496
 2275 00b0 1001     		.short	272
 2276 00b2 6000     		.short	96
 2277 00b4 0004270C 		.word	203883520
 2278 00b8 2001     		.short	288
 2279 00ba 4000     		.short	64
 2280 00bc 0008270C 		.word	203884544
 2281              		.global	crash
 2282              		.align	2
 2285              	crash:
 2286 00c0 4000     		.short	64
 2287 00c2 2000     		.short	32
 2288 00c4 0300     		.short	3
 2289 00c6 0000     		.space	2
 2290 00c8 2000     		.short	32
 2291 00ca D000     		.short	208
 2292 00cc 0008260C 		.word	203819008
 2293 00d0 8000     		.short	128
 2294 00d2 D000     		.short	208
 2295 00d4 0008260C 		.word	203819008
 2296 00d8 E000     		.short	224
 2297 00da D000     		.short	208
 2298 00dc 0008260C 		.word	203819008
 2299              		.global	life
 2300              		.align	2
 2303              	life:
 2304 00e0 1000     		.short	16
 2305 00e2 1000     		.short	16
 2306 00e4 0300     		.short	3
 2307 00e6 0000     		.space	2
 2308 00e8 0800     		.short	8
 2309 00ea 0800     		.short	8
 2310 00ec 0010270C 		.word	203886592
 2311 00f0 1800     		.short	24
 2312 00f2 0800     		.short	8
 2313 00f4 0010270C 		.word	203886592
 2314 00f8 2800     		.short	40
 2315 00fa 0800     		.short	8
 2316 00fc 0010270C 		.word	203886592
 2317              		.comm	fifo,2056,4
 2318              		.comm	gameOver,1,1
 2319              		.comm	dummyPos,1,1
 2320              		.comm	count,2,2
 2321              		.comm	firemenPos,1,1
 2322              		.comm	vidas,1,1
 2323              		.comm	pscancode,1,1
 2324              		.comm	keyscancode,1,1
 2325              		.comm	vDummy,1,1
 2326              		.comm	posCrash,1,1
 2327              		.comm	final,1,1
 2328              		.comm	pause,1,1
 2329              		.comm	inicio,1,1
 2330              		.align	2
 2331              	.LC0:
 2332 0100 50756C73 		.ascii	"Pulse Keypad 0 para jugar\000"
 2332      65204B65 
 2332      79706164 
 2332      20302070 
 2332      61726120 
 2333 011a 0000     		.align	2
 2334              	.LC1:
 2335 011c 55736520 		.ascii	"Use los pulsadores para mover\000"
 2335      6C6F7320 
 2335      70756C73 
 2335      61646F72 
 2335      65732070 
 2336 013a 0000     		.align	2
 2337              	.LC2:
 2338 013c 4B657970 		.ascii	"Keypad 0 para reiniciar\000"
 2338      61642030 
 2338      20706172 
 2338      61207265 
 2338      696E6963 
 2339              		.align	2
 2340              	.LC3:
 2341 0154 4B657970 		.ascii	"Keypad 3 para pausar\000"
 2341      61642033 
 2341      20706172 
 2341      61207061 
 2341      75736172 
 2342              		.text
 2343              		.align	2
 2344              		.global	main
 2346              	main:
 2347              	.LFB0:
   1:../proyecto.c **** 
   2:../proyecto.c **** #include <s3c44b0x.h>
   3:../proyecto.c **** #include <s3cev40.h>
   4:../proyecto.c **** #include <common_types.h>
   5:../proyecto.c **** #include <system.h>
   6:../proyecto.c **** #include <timers.h>
   7:../proyecto.c **** #include <lcd.h>
   8:../proyecto.c **** #include <pbs.h>
   9:../proyecto.c **** #include <keypad.h>
  10:../proyecto.c **** #include <segs.h>
  11:../proyecto.c **** #include <uda1341ts.h>
  12:../proyecto.c **** #include <iis.h>
  13:../proyecto.c **** 
  14:../proyecto.c **** #define TICKS_PER_SEC (100)
  15:../proyecto.c **** 
  16:../proyecto.c **** /* Declaración de graficos */
  17:../proyecto.c **** 
  18:../proyecto.c **** #define NINTENDO   ((uint8 *) 0x0c220000)
  19:../proyecto.c **** #define WIN		   ((uint8 *)0x0c230000)
  20:../proyecto.c **** #define GAME_OVER  ((uint8 *)0x0c240000)
  21:../proyecto.c **** #define LANDSCAPE  ((uint8 *)0x0c250000)
  22:../proyecto.c **** #define FIREMEN    ((uint8 *)0x0c260000)
  23:../proyecto.c **** #define CRASH      ((uint8 *)0x0c260800)
  24:../proyecto.c **** #define DUMMY_0    ((uint8 *)0x0c270000)
  25:../proyecto.c **** #define DUMMY_90   ((uint8 *)0x0c270400)
  26:../proyecto.c **** #define DUMMY_180  ((uint8 *)0x0c270800)
  27:../proyecto.c **** #define DUMMY_270  ((uint8 *)0x0c270C00)
  28:../proyecto.c **** #define LIFE       ((uint8 *)0x0c271000)
  29:../proyecto.c **** 
  30:../proyecto.c **** /* Declaracion de sonidos */
  31:../proyecto.c **** #define CAMA	   ((int16 *)0x0c280000)
  32:../proyecto.c **** #define MOVE	   ((int16 *)0x0c2a0000)
  33:../proyecto.c **** #define MUERTE	   ((int16 *)0x0c2c0000)
  34:../proyecto.c **** 
  35:../proyecto.c **** #define CAMA_SIZE	    (6400)
  36:../proyecto.c **** #define MOVE_SIZE     	(6400)
  37:../proyecto.c **** #define MUERTE_SIZE		(102400)
  38:../proyecto.c **** 
  39:../proyecto.c **** 
  40:../proyecto.c **** 
  41:../proyecto.c **** typedef struct plots {
  42:../proyecto.c ****     uint16 x;               // Posición x en donde se pinta el gráfico
  43:../proyecto.c ****     uint16 y;               // Posición y en donde se pinta el gráfico
  44:../proyecto.c ****     uint8 *plot;            // Puntero al BMP que contiene el gráfico
  45:../proyecto.c **** } plots_t;
  46:../proyecto.c **** 
  47:../proyecto.c **** typedef struct sprite {
  48:../proyecto.c ****     uint16 width;           // Anchura del gráfico en pixeles
  49:../proyecto.c ****     uint16 height;          // Altura del gráfico en pixeles
  50:../proyecto.c ****     uint16 num_plots;       // Número de posiciones diferentes en donde pintar el gráfico
  51:../proyecto.c ****     plots_t plots[];        // Array de posiciones en donde pintar el gráfico
  52:../proyecto.c **** } sprite_t;
  53:../proyecto.c **** 
  54:../proyecto.c **** const sprite_t firemen = 
  55:../proyecto.c **** {
  56:../proyecto.c ****     64, 32, 3,                      // Los bomberos de tamaño 64x32 se pintan en 3 posiciones disti
  57:../proyecto.c ****     {
  58:../proyecto.c ****         {  32, 176, FIREMEN },
  59:../proyecto.c ****         { 128, 176, FIREMEN },
  60:../proyecto.c ****         { 224, 176, FIREMEN }
  61:../proyecto.c ****     }
  62:../proyecto.c **** };
  63:../proyecto.c **** 
  64:../proyecto.c **** const sprite_t dummy = 
  65:../proyecto.c **** {
  66:../proyecto.c ****     32, 32, 19,                    // Los dummies de tamaño 32x32 se pintan en 19 posiciones distin
  67:../proyecto.c ****     {
  68:../proyecto.c ****         {   0,  64, DUMMY_0   },
  69:../proyecto.c ****         {  16,  96, DUMMY_90  },
  70:../proyecto.c ****         {  32, 128, DUMMY_180 },
  71:../proyecto.c ****         {  48, 160, DUMMY_270 },
  72:../proyecto.c ****         {  64, 128, DUMMY_0   },
  73:../proyecto.c ****         {  80,  96, DUMMY_90  },
  74:../proyecto.c ****         {  96,  64, DUMMY_180 },
  75:../proyecto.c ****         { 112,  96, DUMMY_270 },
  76:../proyecto.c ****         { 128, 128, DUMMY_0   },
  77:../proyecto.c ****         { 144, 160, DUMMY_90  },
  78:../proyecto.c ****         { 160, 128, DUMMY_180 },
  79:../proyecto.c ****         { 176,  96, DUMMY_270 },
  80:../proyecto.c ****         { 192,  64, DUMMY_0   },
  81:../proyecto.c ****         { 208,  96, DUMMY_90  },
  82:../proyecto.c ****         { 224, 128, DUMMY_180 },
  83:../proyecto.c ****         { 240, 160, DUMMY_270 },
  84:../proyecto.c ****         { 256, 128, DUMMY_0   },
  85:../proyecto.c ****         { 272, 96,  DUMMY_90  },
  86:../proyecto.c ****         { 288, 64,  DUMMY_180 }
  87:../proyecto.c ****     }
  88:../proyecto.c **** };
  89:../proyecto.c **** 
  90:../proyecto.c **** const sprite_t crash = 
  91:../proyecto.c **** {
  92:../proyecto.c ****     64, 32, 3,                     // Los dummies estrellados de tamaño 64x32 se pintan en 3 posici
  93:../proyecto.c ****     {
  94:../proyecto.c ****         {   32, 208, CRASH },
  95:../proyecto.c ****         {  128, 208, CRASH },
  96:../proyecto.c ****         {  224, 208, CRASH }
  97:../proyecto.c ****     }
  98:../proyecto.c **** };
  99:../proyecto.c **** 
 100:../proyecto.c **** const sprite_t life =
 101:../proyecto.c **** {
 102:../proyecto.c ****     16, 16, 3,                    // Los corazones estrellados de tamaño 16x16 se pintan en 3 posic
 103:../proyecto.c ****     {
 104:../proyecto.c ****         {   8, 8, LIFE },
 105:../proyecto.c ****         {  24, 8, LIFE },
 106:../proyecto.c ****         {  40, 8, LIFE }
 107:../proyecto.c ****     }
 108:../proyecto.c **** };
 109:../proyecto.c **** 
 110:../proyecto.c **** /* Declaración de fifo de punteros a funciones */
 111:../proyecto.c **** 
 112:../proyecto.c **** #define BUFFER_LEN   (512)
 113:../proyecto.c **** 
 114:../proyecto.c **** typedef void (*pf_t)(void);
 115:../proyecto.c **** 
 116:../proyecto.c **** typedef struct fifo {
 117:../proyecto.c ****     uint16 head;
 118:../proyecto.c ****     uint16 tail;
 119:../proyecto.c ****     uint16 size;
 120:../proyecto.c ****     pf_t buffer[BUFFER_LEN];
 121:../proyecto.c **** } fifo_t;
 122:../proyecto.c **** 
 123:../proyecto.c **** void fifo_init( void );
 124:../proyecto.c **** void fifo_enqueue( pf_t pf );
 125:../proyecto.c **** pf_t fifo_dequeue( void );
 126:../proyecto.c **** boolean fifo_is_empty( void );
 127:../proyecto.c **** boolean fifo_is_full( void );
 128:../proyecto.c **** 
 129:../proyecto.c **** /* Declaración de recursos */
 130:../proyecto.c **** 
 131:../proyecto.c **** volatile fifo_t fifo;       // Cola de tareas
 132:../proyecto.c **** boolean gameOver;           // Flag de señalización del fin del juego
 133:../proyecto.c **** 
 134:../proyecto.c **** /* Declaración de variables */
 135:../proyecto.c **** 
 136:../proyecto.c **** uint8 dummyPos;     // Posición del dummy 
 137:../proyecto.c **** uint16 count;       // Número de dummies salvados
 138:../proyecto.c **** uint8 firemenPos;	// Posición del firemen
 139:../proyecto.c **** uint8 vidas;		// vidas que quedan
 140:../proyecto.c **** uint8 pscancode;	// scan del pulsador
 141:../proyecto.c **** uint8 keyscancode;	// scan del keypad
 142:../proyecto.c **** uint8 vDummy;		// velocidad del dummy
 143:../proyecto.c **** uint8 posCrash;		// posicion_muerte
 144:../proyecto.c **** boolean final;
 145:../proyecto.c **** boolean pause;
 146:../proyecto.c **** boolean inicio;
 147:../proyecto.c **** 
 148:../proyecto.c **** /* Declaración de funciones */
 149:../proyecto.c **** 
 150:../proyecto.c **** void dummy_init( void );                                    // Inicializa la posición del dummy y l
 151:../proyecto.c **** void count_init( void );                                    // Inicializa el contador de dummies sa
 152:../proyecto.c **** void sprite_plot( sprite_t const *sprite, uint16 pos );     // Dibuja el gráfico en la posición ind
 153:../proyecto.c **** void sprite_clear( sprite_t const *sprite, uint16 pos );    // Borra el gráfico pintado en la posic
 154:../proyecto.c **** 
 155:../proyecto.c **** /* Declaración de tareas */
 156:../proyecto.c **** 
 157:../proyecto.c **** void dummy_move( void );    // Mueve el dummy
 158:../proyecto.c **** void count_inc( void );     // Incrementa el contador de dummies salvados
 159:../proyecto.c **** void dummy_dead( void);		// Comprueba si hay firemen debajo del dummy.
 160:../proyecto.c **** void firemen_move( void );	// Se encarga del movimiento del firemen.
 161:../proyecto.c **** void pantalla_final(void);	// Pantalla de game over.
 162:../proyecto.c **** void efecto_muerte(void);
 163:../proyecto.c **** void sonido_move(void);
 164:../proyecto.c **** void sonido_cama(void);
 165:../proyecto.c **** void reinicio(void);
 166:../proyecto.c **** 
 167:../proyecto.c **** /* Declaración de RTI */
 168:../proyecto.c **** 
 169:../proyecto.c **** void isr_tick( void ) __attribute__ ((interrupt ("IRQ")));
 170:../proyecto.c **** 
 171:../proyecto.c **** /*******************************************************************/
 172:../proyecto.c **** 
 173:../proyecto.c **** void main( void )
 174:../proyecto.c **** {
 2348              		.loc 1 174 0
 2349              		.cfi_startproc
 2350              		@ Function supports interworking.
 2351              		@ args = 0, pretend = 0, frame = 8
 2352              		@ frame_needed = 1, uses_anonymous_args = 0
 2353 0000 0DC0A0E1 		mov	ip, sp
 2354              	.LCFI0:
 2355              		.cfi_def_cfa_register 12
 2356 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2357 0008 04B04CE2 		sub	fp, ip, #4
 2358              		.cfi_offset 14, -8
 2359              		.cfi_offset 13, -12
 2360              		.cfi_offset 11, -16
 2361              	.LCFI1:
 2362              		.cfi_def_cfa 11, 4
 2363 000c 08D04DE2 		sub	sp, sp, #8
 175:../proyecto.c **** //    uint8 i;
 176:../proyecto.c ****     pf_t pf;
 177:../proyecto.c ****     sys_init();
 2364              		.loc 1 177 0
 2365 0010 FEFFFFEB 		bl	sys_init
 178:../proyecto.c ****     timers_init();
 2366              		.loc 1 178 0
 2367 0014 FEFFFFEB 		bl	timers_init
 179:../proyecto.c ****     lcd_init();
 2368              		.loc 1 179 0
 2369 0018 FEFFFFEB 		bl	lcd_init
 180:../proyecto.c ****     uda1341ts_init();
 2370              		.loc 1 180 0
 2371 001c FEFFFFEB 		bl	uda1341ts_init
 181:../proyecto.c ****     iis_init(IIS_POLLING);
 2372              		.loc 1 181 0
 2373 0020 0200A0E3 		mov	r0, #2
 2374 0024 FEFFFFEB 		bl	iis_init
 182:../proyecto.c ****     
 183:../proyecto.c ****     uda1341ts_setvol( VOL_MED );
 2375              		.loc 1 183 0
 2376 0028 2000A0E3 		mov	r0, #32
 2377 002c FEFFFFEB 		bl	uda1341ts_setvol
 184:../proyecto.c **** 
 185:../proyecto.c ****     lcd_on();
 2378              		.loc 1 185 0
 2379 0030 FEFFFFEB 		bl	lcd_on
 186:../proyecto.c **** 
 187:../proyecto.c ****     lcd_clear();
 2380              		.loc 1 187 0
 2381 0034 FEFFFFEB 		bl	lcd_clear
 188:../proyecto.c ****     lcd_putWallpaper(NINTENDO);
 2382              		.loc 1 188 0
 2383 0038 CC009FE5 		ldr	r0, .L7
 2384 003c FEFFFFEB 		bl	lcd_putWallpaper
 189:../proyecto.c ****     lcd_puts(60, 50, BLACK, "Pulse Keypad 0 para jugar");
 2385              		.loc 1 189 0
 2386 0040 3C00A0E3 		mov	r0, #60
 2387 0044 3210A0E3 		mov	r1, #50
 2388 0048 0F20A0E3 		mov	r2, #15
 2389 004c BC309FE5 		ldr	r3, .L7+4
 2390 0050 FEFFFFEB 		bl	lcd_puts
 190:../proyecto.c ****     lcd_puts(50, 170, BLACK, "Use los pulsadores para mover");
 2391              		.loc 1 190 0
 2392 0054 3200A0E3 		mov	r0, #50
 2393 0058 AA10A0E3 		mov	r1, #170
 2394 005c 0F20A0E3 		mov	r2, #15
 2395 0060 AC309FE5 		ldr	r3, .L7+8
 2396 0064 FEFFFFEB 		bl	lcd_puts
 191:../proyecto.c ****     lcd_puts(50, 190, BLACK, "Keypad 0 para reiniciar");
 2397              		.loc 1 191 0
 2398 0068 3200A0E3 		mov	r0, #50
 2399 006c BE10A0E3 		mov	r1, #190
 2400 0070 0F20A0E3 		mov	r2, #15
 2401 0074 9C309FE5 		ldr	r3, .L7+12
 2402 0078 FEFFFFEB 		bl	lcd_puts
 192:../proyecto.c ****     lcd_puts(50, 210, BLACK, "Keypad 3 para pausar");
 2403              		.loc 1 192 0
 2404 007c 3200A0E3 		mov	r0, #50
 2405 0080 D210A0E3 		mov	r1, #210
 2406 0084 0F20A0E3 		mov	r2, #15
 2407 0088 8C309FE5 		ldr	r3, .L7+16
 2408 008c FEFFFFEB 		bl	lcd_puts
 193:../proyecto.c **** 
 194:../proyecto.c **** 	fifo_init();
 2409              		.loc 1 194 0
 2410 0090 FEFFFFEB 		bl	fifo_init
 195:../proyecto.c **** 	timer0_open_tick( isr_tick, TICKS_PER_SEC );// Instala isr_tick como RTI del timer0
 2411              		.loc 1 195 0
 2412 0094 84009FE5 		ldr	r0, .L7+20
 2413 0098 6410A0E3 		mov	r1, #100
 2414 009c FEFFFFEB 		bl	timer0_open_tick
 196:../proyecto.c ****            
 197:../proyecto.c **** 	pause=FALSE;
 2415              		.loc 1 197 0
 2416 00a0 7C309FE5 		ldr	r3, .L7+24
 2417 00a4 0020A0E3 		mov	r2, #0
 2418 00a8 0020C3E5 		strb	r2, [r3, #0]
 198:../proyecto.c ****     final = TRUE;
 2419              		.loc 1 198 0
 2420 00ac 74309FE5 		ldr	r3, .L7+28
 2421 00b0 0120A0E3 		mov	r2, #1
 2422 00b4 0020C3E5 		strb	r2, [r3, #0]
 199:../proyecto.c ****     gameOver = FALSE;
 2423              		.loc 1 199 0
 2424 00b8 6C309FE5 		ldr	r3, .L7+32
 2425 00bc 0020A0E3 		mov	r2, #0
 2426 00c0 0020C3E5 		strb	r2, [r3, #0]
 200:../proyecto.c **** 
 201:../proyecto.c ****     while( !gameOver )
 2427              		.loc 1 201 0
 2428 00c4 0A0000EA 		b	.L2
 2429              	.L5:
 202:../proyecto.c ****     {
 203:../proyecto.c ****     	sleep();                        // Entra en estado IDLE, sale por interrupción
 2430              		.loc 1 203 0
 2431 00c8 FEFFFFEB 		bl	sleep
 204:../proyecto.c ****         while( !fifo_is_empty() )
 2432              		.loc 1 204 0
 2433 00cc 040000EA 		b	.L3
 2434              	.L4:
 205:../proyecto.c ****         {
 206:../proyecto.c ****             pf = fifo_dequeue();
 2435              		.loc 1 206 0
 2436 00d0 FEFFFFEB 		bl	fifo_dequeue
 2437 00d4 10000BE5 		str	r0, [fp, #-16]
 207:../proyecto.c ****             (*pf)();                    // Las tareas encoladas se ejecutan en esta hebra (backgrou
 2438              		.loc 1 207 0
 2439 00d8 10301BE5 		ldr	r3, [fp, #-16]
 2440 00dc 0FE0A0E1 		mov	lr, pc
 2441 00e0 13FF2FE1 		bx	r3
 2442              	.L3:
 204:../proyecto.c ****         while( !fifo_is_empty() )
 2443              		.loc 1 204 0 discriminator 1
 2444 00e4 FEFFFFEB 		bl	fifo_is_empty
 2445 00e8 0030A0E1 		mov	r3, r0
 2446 00ec 000053E3 		cmp	r3, #0
 2447 00f0 F6FFFF0A 		beq	.L4
 2448              	.L2:
 201:../proyecto.c ****     while( !gameOver )
 2449              		.loc 1 201 0 discriminator 1
 2450 00f4 30309FE5 		ldr	r3, .L7+32
 2451 00f8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2452 00fc 000053E3 		cmp	r3, #0
 2453 0100 F0FFFF0A 		beq	.L5
 208:../proyecto.c ****         }
 209:../proyecto.c ****     }
 210:../proyecto.c ****     
 211:../proyecto.c **** 
 212:../proyecto.c **** 
 213:../proyecto.c ****     timer0_close();
 2454              		.loc 1 213 0
 2455 0104 FEFFFFEB 		bl	timer0_close
 2456              	.L6:
 214:../proyecto.c ****     while(1);
 2457              		.loc 1 214 0 discriminator 1
 2458 0108 FEFFFFEA 		b	.L6
 2459              	.L8:
 2460              		.align	2
 2461              	.L7:
 2462 010c 0000220C 		.word	203554816
 2463 0110 00010000 		.word	.LC0
 2464 0114 1C010000 		.word	.LC1
 2465 0118 3C010000 		.word	.LC2
 2466 011c 54010000 		.word	.LC3
 2467 0120 00000000 		.word	isr_tick
 2468 0124 00000000 		.word	pause
 2469 0128 00000000 		.word	final
 2470 012c 00000000 		.word	gameOver
 2471              		.cfi_endproc
 2472              	.LFE0:
 2474              		.align	2
 2475              		.global	dummy_init
 2477              	dummy_init:
 2478              	.LFB1:
 215:../proyecto.c **** }
 216:../proyecto.c **** 
 217:../proyecto.c **** /*******************************************************************/
 218:../proyecto.c **** 
 219:../proyecto.c **** void dummy_init( void )
 220:../proyecto.c **** {
 2479              		.loc 1 220 0
 2480              		.cfi_startproc
 2481              		@ Function supports interworking.
 2482              		@ args = 0, pretend = 0, frame = 0
 2483              		@ frame_needed = 1, uses_anonymous_args = 0
 2484 0130 0DC0A0E1 		mov	ip, sp
 2485              	.LCFI2:
 2486              		.cfi_def_cfa_register 12
 2487 0134 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2488 0138 04B04CE2 		sub	fp, ip, #4
 2489              		.cfi_offset 14, -8
 2490              		.cfi_offset 13, -12
 2491              		.cfi_offset 11, -16
 2492              	.LCFI3:
 2493              		.cfi_def_cfa 11, 4
 221:../proyecto.c ****     dummyPos = 0;          					// Inicializa la posición del dummy...
 2494              		.loc 1 221 0
 2495 013c 34309FE5 		ldr	r3, .L10
 2496 0140 0020A0E3 		mov	r2, #0
 2497 0144 0020C3E5 		strb	r2, [r3, #0]
 222:../proyecto.c ****     vidas = 3;								//Inicializa las vidas restantes.
 2498              		.loc 1 222 0
 2499 0148 2C309FE5 		ldr	r3, .L10+4
 2500 014c 0320A0E3 		mov	r2, #3
 2501 0150 0020C3E5 		strb	r2, [r3, #0]
 223:../proyecto.c ****     vDummy = 50;								//Velocidad normal de dummy
 2502              		.loc 1 223 0
 2503 0154 24309FE5 		ldr	r3, .L10+8
 2504 0158 3220A0E3 		mov	r2, #50
 2505 015c 0020C3E5 		strb	r2, [r3, #0]
 224:../proyecto.c ****     sprite_plot( &dummy, 0 );               // ... y lo dibuja
 2506              		.loc 1 224 0
 2507 0160 1C009FE5 		ldr	r0, .L10+12
 2508 0164 0010A0E3 		mov	r1, #0
 2509 0168 FEFFFFEB 		bl	sprite_plot
 225:../proyecto.c **** }
 2510              		.loc 1 225 0
 2511 016c 0CD04BE2 		sub	sp, fp, #12
 2512 0170 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2513 0174 1EFF2FE1 		bx	lr
 2514              	.L11:
 2515              		.align	2
 2516              	.L10:
 2517 0178 00000000 		.word	dummyPos
 2518 017c 00000000 		.word	vidas
 2519 0180 00000000 		.word	vDummy
 2520 0184 00000000 		.word	dummy
 2521              		.cfi_endproc
 2522              	.LFE1:
 2524              		.align	2
 2525              		.global	dummy_move
 2527              	dummy_move:
 2528              	.LFB2:
 226:../proyecto.c **** 
 227:../proyecto.c **** void dummy_move( void )
 228:../proyecto.c **** {
 2529              		.loc 1 228 0
 2530              		.cfi_startproc
 2531              		@ Function supports interworking.
 2532              		@ args = 0, pretend = 0, frame = 0
 2533              		@ frame_needed = 1, uses_anonymous_args = 0
 2534 0188 0DC0A0E1 		mov	ip, sp
 2535              	.LCFI4:
 2536              		.cfi_def_cfa_register 12
 2537 018c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2538 0190 04B04CE2 		sub	fp, ip, #4
 2539              		.cfi_offset 14, -8
 2540              		.cfi_offset 13, -12
 2541              		.cfi_offset 11, -16
 2542              	.LCFI5:
 2543              		.cfi_def_cfa 11, 4
 229:../proyecto.c ****     sprite_clear( &dummy, dummyPos );       // Borra el dummy de su posición actual
 2544              		.loc 1 229 0
 2545 0194 7C309FE5 		ldr	r3, .L15
 2546 0198 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2547 019c 78009FE5 		ldr	r0, .L15+4
 2548 01a0 0310A0E1 		mov	r1, r3
 2549 01a4 FEFFFFEB 		bl	sprite_clear
 230:../proyecto.c ****     if( dummyPos == dummy.num_plots-1 )     // Si el dummy ha alcanzado la última posición...
 2550              		.loc 1 230 0
 2551 01a8 68309FE5 		ldr	r3, .L15
 2552 01ac 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2553 01b0 0320A0E1 		mov	r2, r3
 2554 01b4 60309FE5 		ldr	r3, .L15+4
 2555 01b8 B430D3E1 		ldrh	r3, [r3, #4]
 2556 01bc 013043E2 		sub	r3, r3, #1
 2557 01c0 030052E1 		cmp	r2, r3
 2558 01c4 0500001A 		bne	.L13
 231:../proyecto.c ****     {
 232:../proyecto.c ****         dummyPos = 0;                       // ... lo coloca en la posición de salida
 2559              		.loc 1 232 0
 2560 01c8 48309FE5 		ldr	r3, .L15
 2561 01cc 0020A0E3 		mov	r2, #0
 2562 01d0 0020C3E5 		strb	r2, [r3, #0]
 233:../proyecto.c ****         fifo_enqueue( count_inc );          // ... incremeta el contador de dummies rescatados 
 2563              		.loc 1 233 0
 2564 01d4 44009FE5 		ldr	r0, .L15+8
 2565 01d8 FEFFFFEB 		bl	fifo_enqueue
 2566 01dc 050000EA 		b	.L14
 2567              	.L13:
 234:../proyecto.c ****     } else
 235:../proyecto.c ****         dummyPos++;                         // En caso contrario, avanza su posición
 2568              		.loc 1 235 0
 2569 01e0 30309FE5 		ldr	r3, .L15
 2570 01e4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2571 01e8 013083E2 		add	r3, r3, #1
 2572 01ec FF2003E2 		and	r2, r3, #255
 2573 01f0 20309FE5 		ldr	r3, .L15
 2574 01f4 0020C3E5 		strb	r2, [r3, #0]
 2575              	.L14:
 236:../proyecto.c ****     sprite_plot( &dummy, dummyPos );        // Dibuja el dummy en la nueva posición   
 2576              		.loc 1 236 0
 2577 01f8 18309FE5 		ldr	r3, .L15
 2578 01fc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2579 0200 14009FE5 		ldr	r0, .L15+4
 2580 0204 0310A0E1 		mov	r1, r3
 2581 0208 FEFFFFEB 		bl	sprite_plot
 237:../proyecto.c **** }
 2582              		.loc 1 237 0
 2583 020c 0CD04BE2 		sub	sp, fp, #12
 2584 0210 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2585 0214 1EFF2FE1 		bx	lr
 2586              	.L16:
 2587              		.align	2
 2588              	.L15:
 2589 0218 00000000 		.word	dummyPos
 2590 021c 00000000 		.word	dummy
 2591 0220 00000000 		.word	count_inc
 2592              		.cfi_endproc
 2593              	.LFE2:
 2595              		.align	2
 2596              		.global	dummy_dead
 2598              	dummy_dead:
 2599              	.LFB3:
 238:../proyecto.c **** 
 239:../proyecto.c **** 
 240:../proyecto.c **** 
 241:../proyecto.c **** void dummy_dead( void ){
 2600              		.loc 1 241 0
 2601              		.cfi_startproc
 2602              		@ Function supports interworking.
 2603              		@ args = 0, pretend = 0, frame = 0
 2604              		@ frame_needed = 1, uses_anonymous_args = 0
 2605 0224 0DC0A0E1 		mov	ip, sp
 2606              	.LCFI6:
 2607              		.cfi_def_cfa_register 12
 2608 0228 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2609 022c 04B04CE2 		sub	fp, ip, #4
 2610              		.cfi_offset 14, -8
 2611              		.cfi_offset 13, -12
 2612              		.cfi_offset 11, -16
 2613              	.LCFI7:
 2614              		.cfi_def_cfa 11, 4
 242:../proyecto.c **** 	if ((dummyPos==4)||(dummyPos==10)||(dummyPos==16)){
 2615              		.loc 1 242 0
 2616 0230 74319FE5 		ldr	r3, .L27
 2617 0234 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2618 0238 040053E3 		cmp	r3, #4
 2619 023c 0700000A 		beq	.L18
 2620              		.loc 1 242 0 is_stmt 0 discriminator 1
 2621 0240 64319FE5 		ldr	r3, .L27
 2622 0244 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2623 0248 0A0053E3 		cmp	r3, #10
 2624 024c 0300000A 		beq	.L18
 2625 0250 54319FE5 		ldr	r3, .L27
 2626 0254 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2627 0258 100053E3 		cmp	r3, #16
 2628 025c 4F00001A 		bne	.L17
 2629              	.L18:
 243:../proyecto.c **** 		if(!((firemenPos==0 && dummyPos==4)||(firemenPos==1 && dummyPos==10)||(firemenPos==2 && dummyPos=
 2630              		.loc 1 243 0 is_stmt 1
 2631 0260 48319FE5 		ldr	r3, .L27+4
 2632 0264 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2633 0268 000053E3 		cmp	r3, #0
 2634 026c 0300001A 		bne	.L20
 2635              		.loc 1 243 0 is_stmt 0 discriminator 2
 2636 0270 34319FE5 		ldr	r3, .L27
 2637 0274 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2638 0278 040053E3 		cmp	r3, #4
 2639 027c 4500000A 		beq	.L21
 2640              	.L20:
 2641              		.loc 1 243 0 discriminator 1
 2642 0280 28319FE5 		ldr	r3, .L27+4
 2643 0284 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2644 0288 010053E3 		cmp	r3, #1
 2645 028c 0300001A 		bne	.L22
 2646              		.loc 1 243 0 discriminator 2
 2647 0290 14319FE5 		ldr	r3, .L27
 2648 0294 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2649 0298 0A0053E3 		cmp	r3, #10
 2650 029c 3D00000A 		beq	.L21
 2651              	.L22:
 2652              		.loc 1 243 0 discriminator 1
 2653 02a0 08319FE5 		ldr	r3, .L27+4
 2654 02a4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2655 02a8 020053E3 		cmp	r3, #2
 2656 02ac 0300001A 		bne	.L23
 2657 02b0 F4309FE5 		ldr	r3, .L27
 2658 02b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2659 02b8 100053E3 		cmp	r3, #16
 2660 02bc 3500000A 		beq	.L21
 2661              	.L23:
 244:../proyecto.c **** 			if (dummyPos==4)posCrash=0;
 2662              		.loc 1 244 0 is_stmt 1
 2663 02c0 E4309FE5 		ldr	r3, .L27
 2664 02c4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2665 02c8 040053E3 		cmp	r3, #4
 2666 02cc 0300001A 		bne	.L24
 2667              		.loc 1 244 0 is_stmt 0 discriminator 1
 2668 02d0 DC309FE5 		ldr	r3, .L27+8
 2669 02d4 0020A0E3 		mov	r2, #0
 2670 02d8 0020C3E5 		strb	r2, [r3, #0]
 2671 02dc 0E0000EA 		b	.L25
 2672              	.L24:
 245:../proyecto.c **** 			else if (dummyPos==10)posCrash=1;
 2673              		.loc 1 245 0 is_stmt 1
 2674 02e0 C4309FE5 		ldr	r3, .L27
 2675 02e4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2676 02e8 0A0053E3 		cmp	r3, #10
 2677 02ec 0300001A 		bne	.L26
 2678              		.loc 1 245 0 is_stmt 0 discriminator 1
 2679 02f0 BC309FE5 		ldr	r3, .L27+8
 2680 02f4 0120A0E3 		mov	r2, #1
 2681 02f8 0020C3E5 		strb	r2, [r3, #0]
 2682 02fc 060000EA 		b	.L25
 2683              	.L26:
 246:../proyecto.c **** 			else if (dummyPos==16)posCrash=2;
 2684              		.loc 1 246 0 is_stmt 1
 2685 0300 A4309FE5 		ldr	r3, .L27
 2686 0304 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2687 0308 100053E3 		cmp	r3, #16
 2688 030c 0200001A 		bne	.L25
 2689              		.loc 1 246 0 is_stmt 0 discriminator 1
 2690 0310 9C309FE5 		ldr	r3, .L27+8
 2691 0314 0220A0E3 		mov	r2, #2
 2692 0318 0020C3E5 		strb	r2, [r3, #0]
 2693              	.L25:
 247:../proyecto.c **** 			sprite_plot(&crash, posCrash);
 2694              		.loc 1 247 0 is_stmt 1
 2695 031c 90309FE5 		ldr	r3, .L27+8
 2696 0320 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2697 0324 8C009FE5 		ldr	r0, .L27+12
 2698 0328 0310A0E1 		mov	r1, r3
 2699 032c FEFFFFEB 		bl	sprite_plot
 248:../proyecto.c **** 			fifo_enqueue(efecto_muerte);
 2700              		.loc 1 248 0
 2701 0330 84009FE5 		ldr	r0, .L27+16
 2702 0334 FEFFFFEB 		bl	fifo_enqueue
 249:../proyecto.c **** 			vidas=vidas-1;
 2703              		.loc 1 249 0
 2704 0338 80309FE5 		ldr	r3, .L27+20
 2705 033c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2706 0340 013043E2 		sub	r3, r3, #1
 2707 0344 FF2003E2 		and	r2, r3, #255
 2708 0348 70309FE5 		ldr	r3, .L27+20
 2709 034c 0020C3E5 		strb	r2, [r3, #0]
 250:../proyecto.c **** 			sprite_clear( &dummy, dummyPos );
 2710              		.loc 1 250 0
 2711 0350 54309FE5 		ldr	r3, .L27
 2712 0354 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2713 0358 64009FE5 		ldr	r0, .L27+24
 2714 035c 0310A0E1 		mov	r1, r3
 2715 0360 FEFFFFEB 		bl	sprite_clear
 251:../proyecto.c **** 			sprite_clear( &life, vidas );
 2716              		.loc 1 251 0
 2717 0364 54309FE5 		ldr	r3, .L27+20
 2718 0368 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2719 036c 54009FE5 		ldr	r0, .L27+28
 2720 0370 0310A0E1 		mov	r1, r3
 2721 0374 FEFFFFEB 		bl	sprite_clear
 252:../proyecto.c **** 	    	segs_putchar(vidas); //Muestra vidas en el display de 7 segmentos.
 2722              		.loc 1 252 0
 2723 0378 40309FE5 		ldr	r3, .L27+20
 2724 037c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2725 0380 0300A0E1 		mov	r0, r3
 2726 0384 FEFFFFEB 		bl	segs_putchar
 253:../proyecto.c **** 			dummyPos=0;
 2727              		.loc 1 253 0
 2728 0388 1C309FE5 		ldr	r3, .L27
 2729 038c 0020A0E3 		mov	r2, #0
 2730 0390 0020C3E5 		strb	r2, [r3, #0]
 2731 0394 010000EA 		b	.L17
 2732              	.L21:
 254:../proyecto.c **** 		}else{
 255:../proyecto.c **** 			fifo_enqueue(sonido_cama);
 2733              		.loc 1 255 0
 2734 0398 2C009FE5 		ldr	r0, .L27+32
 2735 039c FEFFFFEB 		bl	fifo_enqueue
 2736              	.L17:
 256:../proyecto.c **** 		}
 257:../proyecto.c **** 	}
 258:../proyecto.c **** }
 2737              		.loc 1 258 0
 2738 03a0 0CD04BE2 		sub	sp, fp, #12
 2739 03a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2740 03a8 1EFF2FE1 		bx	lr
 2741              	.L28:
 2742              		.align	2
 2743              	.L27:
 2744 03ac 00000000 		.word	dummyPos
 2745 03b0 00000000 		.word	firemenPos
 2746 03b4 00000000 		.word	posCrash
 2747 03b8 00000000 		.word	crash
 2748 03bc 00000000 		.word	efecto_muerte
 2749 03c0 00000000 		.word	vidas
 2750 03c4 00000000 		.word	dummy
 2751 03c8 00000000 		.word	life
 2752 03cc 00000000 		.word	sonido_cama
 2753              		.cfi_endproc
 2754              	.LFE3:
 2756              		.align	2
 2757              		.global	firemen_move
 2759              	firemen_move:
 2760              	.LFB4:
 259:../proyecto.c **** 
 260:../proyecto.c **** void firemen_move( void ){
 2761              		.loc 1 260 0
 2762              		.cfi_startproc
 2763              		@ Function supports interworking.
 2764              		@ args = 0, pretend = 0, frame = 0
 2765              		@ frame_needed = 1, uses_anonymous_args = 0
 2766 03d0 0DC0A0E1 		mov	ip, sp
 2767              	.LCFI8:
 2768              		.cfi_def_cfa_register 12
 2769 03d4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2770 03d8 04B04CE2 		sub	fp, ip, #4
 2771              		.cfi_offset 14, -8
 2772              		.cfi_offset 13, -12
 2773              		.cfi_offset 11, -16
 2774              	.LCFI9:
 2775              		.cfi_def_cfa 11, 4
 261:../proyecto.c **** 	if( pscancode == PB_RIGHT){
 2776              		.loc 1 261 0
 2777 03dc C8309FE5 		ldr	r3, .L32
 2778 03e0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2779 03e4 800053E3 		cmp	r3, #128
 2780 03e8 1400001A 		bne	.L30
 262:../proyecto.c **** 		if(firemenPos<2){
 2781              		.loc 1 262 0
 2782 03ec BC309FE5 		ldr	r3, .L32+4
 2783 03f0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2784 03f4 010053E3 		cmp	r3, #1
 2785 03f8 2800008A 		bhi	.L29
 263:../proyecto.c **** 			sprite_clear(&firemen, firemenPos);
 2786              		.loc 1 263 0
 2787 03fc AC309FE5 		ldr	r3, .L32+4
 2788 0400 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2789 0404 A8009FE5 		ldr	r0, .L32+8
 2790 0408 0310A0E1 		mov	r1, r3
 2791 040c FEFFFFEB 		bl	sprite_clear
 264:../proyecto.c **** 			firemenPos++;
 2792              		.loc 1 264 0
 2793 0410 98309FE5 		ldr	r3, .L32+4
 2794 0414 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2795 0418 013083E2 		add	r3, r3, #1
 2796 041c FF2003E2 		and	r2, r3, #255
 2797 0420 88309FE5 		ldr	r3, .L32+4
 2798 0424 0020C3E5 		strb	r2, [r3, #0]
 265:../proyecto.c **** 			sprite_plot(&firemen, firemenPos);
 2799              		.loc 1 265 0
 2800 0428 80309FE5 		ldr	r3, .L32+4
 2801 042c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2802 0430 7C009FE5 		ldr	r0, .L32+8
 2803 0434 0310A0E1 		mov	r1, r3
 2804 0438 FEFFFFEB 		bl	sprite_plot
 2805 043c 170000EA 		b	.L29
 2806              	.L30:
 266:../proyecto.c **** 		};
 267:../proyecto.c **** 	}else if(pscancode == PB_LEFT){
 2807              		.loc 1 267 0
 2808 0440 64309FE5 		ldr	r3, .L32
 2809 0444 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2810 0448 400053E3 		cmp	r3, #64
 2811 044c 1300001A 		bne	.L29
 268:../proyecto.c **** 		if(firemenPos>0){
 2812              		.loc 1 268 0
 2813 0450 58309FE5 		ldr	r3, .L32+4
 2814 0454 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2815 0458 000053E3 		cmp	r3, #0
 2816 045c 0F00000A 		beq	.L29
 269:../proyecto.c **** 			sprite_clear(&firemen, firemenPos);
 2817              		.loc 1 269 0
 2818 0460 48309FE5 		ldr	r3, .L32+4
 2819 0464 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2820 0468 44009FE5 		ldr	r0, .L32+8
 2821 046c 0310A0E1 		mov	r1, r3
 2822 0470 FEFFFFEB 		bl	sprite_clear
 270:../proyecto.c **** 			firemenPos--;
 2823              		.loc 1 270 0
 2824 0474 34309FE5 		ldr	r3, .L32+4
 2825 0478 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2826 047c 013043E2 		sub	r3, r3, #1
 2827 0480 FF2003E2 		and	r2, r3, #255
 2828 0484 24309FE5 		ldr	r3, .L32+4
 2829 0488 0020C3E5 		strb	r2, [r3, #0]
 271:../proyecto.c **** 			sprite_plot(&firemen, firemenPos);
 2830              		.loc 1 271 0
 2831 048c 1C309FE5 		ldr	r3, .L32+4
 2832 0490 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2833 0494 18009FE5 		ldr	r0, .L32+8
 2834 0498 0310A0E1 		mov	r1, r3
 2835 049c FEFFFFEB 		bl	sprite_plot
 2836              	.L29:
 272:../proyecto.c **** 		}
 273:../proyecto.c **** 	}
 274:../proyecto.c **** }
 2837              		.loc 1 274 0
 2838 04a0 0CD04BE2 		sub	sp, fp, #12
 2839 04a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2840 04a8 1EFF2FE1 		bx	lr
 2841              	.L33:
 2842              		.align	2
 2843              	.L32:
 2844 04ac 00000000 		.word	pscancode
 2845 04b0 00000000 		.word	firemenPos
 2846 04b4 00000000 		.word	firemen
 2847              		.cfi_endproc
 2848              	.LFE4:
 2850              		.align	2
 2851              		.global	pulsadores
 2853              	pulsadores:
 2854              	.LFB5:
 275:../proyecto.c **** 
 276:../proyecto.c **** void pulsadores ( void ){
 2855              		.loc 1 276 0
 2856              		.cfi_startproc
 2857              		@ Function supports interworking.
 2858              		@ args = 0, pretend = 0, frame = 0
 2859              		@ frame_needed = 1, uses_anonymous_args = 0
 2860 04b8 0DC0A0E1 		mov	ip, sp
 2861              	.LCFI10:
 2862              		.cfi_def_cfa_register 12
 2863 04bc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2864 04c0 04B04CE2 		sub	fp, ip, #4
 2865              		.cfi_offset 14, -8
 2866              		.cfi_offset 13, -12
 2867              		.cfi_offset 11, -16
 2868              	.LCFI11:
 2869              		.cfi_def_cfa 11, 4
 277:../proyecto.c **** 	static boolean init = TRUE;
 278:../proyecto.c **** 	static enum { wait_pdown, scan, wait_pup } state;
 279:../proyecto.c **** 
 280:../proyecto.c **** 	if( init )
 2870              		.loc 1 280 0
 2871 04c4 E8309FE5 		ldr	r3, .L46
 2872 04c8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2873 04cc 000053E3 		cmp	r3, #0
 2874 04d0 0600000A 		beq	.L35
 281:../proyecto.c **** 	{
 282:../proyecto.c **** 		init  = FALSE;
 2875              		.loc 1 282 0
 2876 04d4 D8309FE5 		ldr	r3, .L46
 2877 04d8 0020A0E3 		mov	r2, #0
 2878 04dc 0020C3E5 		strb	r2, [r3, #0]
 283:../proyecto.c **** 		state = wait_pdown;
 2879              		.loc 1 283 0
 2880 04e0 D0309FE5 		ldr	r3, .L46+4
 2881 04e4 0020A0E3 		mov	r2, #0
 2882 04e8 0020C3E5 		strb	r2, [r3, #0]
 2883 04ec 2D0000EA 		b	.L34
 2884              	.L35:
 284:../proyecto.c **** 	}
 285:../proyecto.c **** 	else switch( state )
 2885              		.loc 1 285 0
 2886 04f0 C0309FE5 		ldr	r3, .L46+4
 2887 04f4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2888 04f8 010053E3 		cmp	r3, #1
 2889 04fc 0B00000A 		beq	.L38
 2890 0500 020053E3 		cmp	r3, #2
 2891 0504 1C00000A 		beq	.L39
 2892 0508 000053E3 		cmp	r3, #0
 2893 050c 2500001A 		bne	.L34
 2894              	.L37:
 286:../proyecto.c **** 	{
 287:../proyecto.c **** 		case wait_pdown:
 288:../proyecto.c **** 			if( pb_pressed() )
 2895              		.loc 1 288 0
 2896 0510 FEFFFFEB 		bl	pb_pressed
 2897 0514 0030A0E1 		mov	r3, r0
 2898 0518 000053E3 		cmp	r3, #0
 2899 051c 1E00000A 		beq	.L44
 289:../proyecto.c **** 				state = scan;
 2900              		.loc 1 289 0
 2901 0520 90309FE5 		ldr	r3, .L46+4
 2902 0524 0120A0E3 		mov	r2, #1
 2903 0528 0020C3E5 		strb	r2, [r3, #0]
 290:../proyecto.c **** 			break;
 2904              		.loc 1 290 0
 2905 052c 1D0000EA 		b	.L34
 2906              	.L38:
 291:../proyecto.c **** 		case scan:
 292:../proyecto.c **** 			pscancode = pb_scan();
 2907              		.loc 1 292 0
 2908 0530 FEFFFFEB 		bl	pb_scan
 2909 0534 0030A0E1 		mov	r3, r0
 2910 0538 0320A0E1 		mov	r2, r3
 2911 053c 78309FE5 		ldr	r3, .L46+8
 2912 0540 0020C3E5 		strb	r2, [r3, #0]
 293:../proyecto.c **** 			if( pscancode == PB_RIGHT || pscancode == PB_LEFT){
 2913              		.loc 1 293 0
 2914 0544 70309FE5 		ldr	r3, .L46+8
 2915 0548 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2916 054c 800053E3 		cmp	r3, #128
 2917 0550 0300000A 		beq	.L41
 2918              		.loc 1 293 0 is_stmt 0 discriminator 1
 2919 0554 60309FE5 		ldr	r3, .L46+8
 2920 0558 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2921 055c 400053E3 		cmp	r3, #64
 2922 0560 0100001A 		bne	.L42
 2923              	.L41:
 294:../proyecto.c **** 				fifo_enqueue( firemen_move );
 2924              		.loc 1 294 0 is_stmt 1
 2925 0564 54009FE5 		ldr	r0, .L46+12
 2926 0568 FEFFFFEB 		bl	fifo_enqueue
 2927              	.L42:
 295:../proyecto.c **** 			}
 296:../proyecto.c **** 			state = wait_pup;
 2928              		.loc 1 296 0
 2929 056c 44309FE5 		ldr	r3, .L46+4
 2930 0570 0220A0E3 		mov	r2, #2
 2931 0574 0020C3E5 		strb	r2, [r3, #0]
 297:../proyecto.c **** 			break;
 2932              		.loc 1 297 0
 2933 0578 0A0000EA 		b	.L34
 2934              	.L39:
 298:../proyecto.c **** 		case wait_pup:
 299:../proyecto.c **** 			if( !pb_pressed() )
 2935              		.loc 1 299 0
 2936 057c FEFFFFEB 		bl	pb_pressed
 2937 0580 0030A0E1 		mov	r3, r0
 2938 0584 000053E3 		cmp	r3, #0
 2939 0588 0500001A 		bne	.L45
 300:../proyecto.c **** 				state = wait_pdown;
 2940              		.loc 1 300 0
 2941 058c 24309FE5 		ldr	r3, .L46+4
 2942 0590 0020A0E3 		mov	r2, #0
 2943 0594 0020C3E5 		strb	r2, [r3, #0]
 301:../proyecto.c **** 			break;
 2944              		.loc 1 301 0
 2945 0598 020000EA 		b	.L34
 2946              	.L44:
 290:../proyecto.c **** 			break;
 2947              		.loc 1 290 0
 2948 059c 0000A0E1 		mov	r0, r0	@ nop
 2949 05a0 000000EA 		b	.L34
 2950              	.L45:
 2951              		.loc 1 301 0
 2952 05a4 0000A0E1 		mov	r0, r0	@ nop
 2953              	.L34:
 302:../proyecto.c **** 	}
 303:../proyecto.c **** }
 2954              		.loc 1 303 0
 2955 05a8 0CD04BE2 		sub	sp, fp, #12
 2956 05ac 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2957 05b0 1EFF2FE1 		bx	lr
 2958              	.L47:
 2959              		.align	2
 2960              	.L46:
 2961 05b4 05000000 		.word	init.4227
 2962 05b8 01000000 		.word	state.4232
 2963 05bc 00000000 		.word	pscancode
 2964 05c0 00000000 		.word	firemen_move
 2965              		.cfi_endproc
 2966              	.LFE5:
 2968              		.align	2
 2969              		.global	keypad
 2971              	keypad:
 2972              	.LFB6:
 304:../proyecto.c **** 
 305:../proyecto.c **** void keypad ( void ){
 2973              		.loc 1 305 0
 2974              		.cfi_startproc
 2975              		@ Function supports interworking.
 2976              		@ args = 0, pretend = 0, frame = 0
 2977              		@ frame_needed = 1, uses_anonymous_args = 0
 2978 05c4 0DC0A0E1 		mov	ip, sp
 2979              	.LCFI12:
 2980              		.cfi_def_cfa_register 12
 2981 05c8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2982 05cc 04B04CE2 		sub	fp, ip, #4
 2983              		.cfi_offset 14, -8
 2984              		.cfi_offset 13, -12
 2985              		.cfi_offset 11, -16
 2986              	.LCFI13:
 2987              		.cfi_def_cfa 11, 4
 306:../proyecto.c **** 	static boolean init = TRUE;
 307:../proyecto.c **** 		static enum { wait_keydown, scan, wait_keyup } state;
 308:../proyecto.c **** 
 309:../proyecto.c **** 		if( init )
 2988              		.loc 1 309 0
 2989 05d0 18319FE5 		ldr	r3, .L61
 2990 05d4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2991 05d8 000053E3 		cmp	r3, #0
 2992 05dc 0600000A 		beq	.L49
 310:../proyecto.c **** 		{
 311:../proyecto.c **** 			init  = FALSE;
 2993              		.loc 1 311 0
 2994 05e0 08319FE5 		ldr	r3, .L61
 2995 05e4 0020A0E3 		mov	r2, #0
 2996 05e8 0020C3E5 		strb	r2, [r3, #0]
 312:../proyecto.c **** 			state = wait_keydown;
 2997              		.loc 1 312 0
 2998 05ec 00319FE5 		ldr	r3, .L61+4
 2999 05f0 0020A0E3 		mov	r2, #0
 3000 05f4 0020C3E5 		strb	r2, [r3, #0]
 3001 05f8 390000EA 		b	.L48
 3002              	.L49:
 313:../proyecto.c **** 		}
 314:../proyecto.c **** 		else switch( state )
 3003              		.loc 1 314 0
 3004 05fc F0309FE5 		ldr	r3, .L61+4
 3005 0600 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3006 0604 010053E3 		cmp	r3, #1
 3007 0608 0B00000A 		beq	.L52
 3008 060c 020053E3 		cmp	r3, #2
 3009 0610 2800000A 		beq	.L53
 3010 0614 000053E3 		cmp	r3, #0
 3011 0618 3100001A 		bne	.L48
 3012              	.L51:
 315:../proyecto.c **** 		{
 316:../proyecto.c **** 			case wait_keydown:
 317:../proyecto.c **** 				if( keypad_pressed() )
 3013              		.loc 1 317 0
 3014 061c FEFFFFEB 		bl	keypad_pressed
 3015 0620 0030A0E1 		mov	r3, r0
 3016 0624 000053E3 		cmp	r3, #0
 3017 0628 2A00000A 		beq	.L59
 318:../proyecto.c **** 					state = scan;
 3018              		.loc 1 318 0
 3019 062c C0309FE5 		ldr	r3, .L61+4
 3020 0630 0120A0E3 		mov	r2, #1
 3021 0634 0020C3E5 		strb	r2, [r3, #0]
 319:../proyecto.c **** 				break;
 3022              		.loc 1 319 0
 3023 0638 290000EA 		b	.L48
 3024              	.L52:
 320:../proyecto.c **** 			case scan:
 321:../proyecto.c **** 				keyscancode = keypad_scan();
 3025              		.loc 1 321 0
 3026 063c FEFFFFEB 		bl	keypad_scan
 3027 0640 0030A0E1 		mov	r3, r0
 3028 0644 0320A0E1 		mov	r2, r3
 3029 0648 A8309FE5 		ldr	r3, .L61+8
 3030 064c 0020C3E5 		strb	r2, [r3, #0]
 322:../proyecto.c **** 				if( keyscancode == KEYPAD_KEY0){
 3031              		.loc 1 322 0
 3032 0650 A0309FE5 		ldr	r3, .L61+8
 3033 0654 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3034 0658 000053E3 		cmp	r3, #0
 3035 065c 0200001A 		bne	.L55
 323:../proyecto.c **** 					fifo_enqueue( reinicio );
 3036              		.loc 1 323 0
 3037 0660 94009FE5 		ldr	r0, .L61+12
 3038 0664 FEFFFFEB 		bl	fifo_enqueue
 3039 0668 0E0000EA 		b	.L56
 3040              	.L55:
 324:../proyecto.c **** 				}else if (keyscancode==KEYPAD_KEY3){
 3041              		.loc 1 324 0
 3042 066c 84309FE5 		ldr	r3, .L61+8
 3043 0670 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3044 0674 030053E3 		cmp	r3, #3
 3045 0678 0A00001A 		bne	.L56
 325:../proyecto.c **** 					if(!pause)pause = TRUE;
 3046              		.loc 1 325 0
 3047 067c 7C309FE5 		ldr	r3, .L61+16
 3048 0680 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3049 0684 000053E3 		cmp	r3, #0
 3050 0688 0300001A 		bne	.L57
 3051              		.loc 1 325 0 is_stmt 0 discriminator 1
 3052 068c 6C309FE5 		ldr	r3, .L61+16
 3053 0690 0120A0E3 		mov	r2, #1
 3054 0694 0020C3E5 		strb	r2, [r3, #0]
 3055 0698 020000EA 		b	.L56
 3056              	.L57:
 326:../proyecto.c **** 					else pause=FALSE;
 3057              		.loc 1 326 0 is_stmt 1
 3058 069c 5C309FE5 		ldr	r3, .L61+16
 3059 06a0 0020A0E3 		mov	r2, #0
 3060 06a4 0020C3E5 		strb	r2, [r3, #0]
 3061              	.L56:
 327:../proyecto.c **** 				}
 328:../proyecto.c **** 				state = wait_keyup;
 3062              		.loc 1 328 0
 3063 06a8 44309FE5 		ldr	r3, .L61+4
 3064 06ac 0220A0E3 		mov	r2, #2
 3065 06b0 0020C3E5 		strb	r2, [r3, #0]
 329:../proyecto.c **** 				break;
 3066              		.loc 1 329 0
 3067 06b4 0A0000EA 		b	.L48
 3068              	.L53:
 330:../proyecto.c **** 			case wait_keyup:
 331:../proyecto.c **** 				if( !keypad_pressed() )
 3069              		.loc 1 331 0
 3070 06b8 FEFFFFEB 		bl	keypad_pressed
 3071 06bc 0030A0E1 		mov	r3, r0
 3072 06c0 000053E3 		cmp	r3, #0
 3073 06c4 0500001A 		bne	.L60
 332:../proyecto.c **** 					state = wait_keydown;
 3074              		.loc 1 332 0
 3075 06c8 24309FE5 		ldr	r3, .L61+4
 3076 06cc 0020A0E3 		mov	r2, #0
 3077 06d0 0020C3E5 		strb	r2, [r3, #0]
 333:../proyecto.c **** 				break;
 3078              		.loc 1 333 0
 3079 06d4 020000EA 		b	.L48
 3080              	.L59:
 319:../proyecto.c **** 				break;
 3081              		.loc 1 319 0
 3082 06d8 0000A0E1 		mov	r0, r0	@ nop
 3083 06dc 000000EA 		b	.L48
 3084              	.L60:
 3085              		.loc 1 333 0
 3086 06e0 0000A0E1 		mov	r0, r0	@ nop
 3087              	.L48:
 334:../proyecto.c **** 		}
 335:../proyecto.c **** }
 3088              		.loc 1 335 0
 3089 06e4 0CD04BE2 		sub	sp, fp, #12
 3090 06e8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3091 06ec 1EFF2FE1 		bx	lr
 3092              	.L62:
 3093              		.align	2
 3094              	.L61:
 3095 06f0 04000000 		.word	init.4240
 3096 06f4 00000000 		.word	state.4245
 3097 06f8 00000000 		.word	keyscancode
 3098 06fc 00000000 		.word	reinicio
 3099 0700 00000000 		.word	pause
 3100              		.cfi_endproc
 3101              	.LFE6:
 3103              		.align	2
 3104              		.global	reinicio
 3106              	reinicio:
 3107              	.LFB7:
 336:../proyecto.c **** 
 337:../proyecto.c **** void reinicio(){
 3108              		.loc 1 337 0
 3109              		.cfi_startproc
 3110              		@ Function supports interworking.
 3111              		@ args = 0, pretend = 0, frame = 8
 3112              		@ frame_needed = 1, uses_anonymous_args = 0
 3113 0704 0DC0A0E1 		mov	ip, sp
 3114              	.LCFI14:
 3115              		.cfi_def_cfa_register 12
 3116 0708 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3117 070c 04B04CE2 		sub	fp, ip, #4
 3118              		.cfi_offset 14, -8
 3119              		.cfi_offset 13, -12
 3120              		.cfi_offset 11, -16
 3121              	.LCFI15:
 3122              		.cfi_def_cfa 11, 4
 3123 0710 08D04DE2 		sub	sp, sp, #8
 338:../proyecto.c ****     uint8 i;
 339:../proyecto.c **** 
 340:../proyecto.c ****     lcd_clear();
 3124              		.loc 1 340 0
 3125 0714 FEFFFFEB 		bl	lcd_clear
 341:../proyecto.c ****     lcd_putWallpaper( LANDSCAPE );              // Dibuja el fondo de la pantalla
 3126              		.loc 1 341 0
 3127 0718 BC009FE5 		ldr	r0, .L66
 3128 071c FEFFFFEB 		bl	lcd_putWallpaper
 342:../proyecto.c **** 	sprite_plot( &firemen, 0 );					// Dibuja los bomberos en todas sus posiciones posibles
 3129              		.loc 1 342 0
 3130 0720 B8009FE5 		ldr	r0, .L66+4
 3131 0724 0010A0E3 		mov	r1, #0
 3132 0728 FEFFFFEB 		bl	sprite_plot
 343:../proyecto.c **** 	firemenPos=0;
 3133              		.loc 1 343 0
 3134 072c B0309FE5 		ldr	r3, .L66+8
 3135 0730 0020A0E3 		mov	r2, #0
 3136 0734 0020C3E5 		strb	r2, [r3, #0]
 344:../proyecto.c ****     for( i=0; i<life.num_plots; i++ )           // Dibuja los corazones en todas sus posiciones pos
 3137              		.loc 1 344 0
 3138 0738 0030A0E3 		mov	r3, #0
 3139 073c 0D304BE5 		strb	r3, [fp, #-13]
 3140 0740 080000EA 		b	.L64
 3141              	.L65:
 345:../proyecto.c ****         sprite_plot( &life, i );
 3142              		.loc 1 345 0 discriminator 2
 3143 0744 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 3144 0748 0338A0E1 		mov	r3, r3, asl #16
 3145 074c 2338A0E1 		mov	r3, r3, lsr #16
 3146 0750 90009FE5 		ldr	r0, .L66+12
 3147 0754 0310A0E1 		mov	r1, r3
 3148 0758 FEFFFFEB 		bl	sprite_plot
 344:../proyecto.c ****     for( i=0; i<life.num_plots; i++ )           // Dibuja los corazones en todas sus posiciones pos
 3149              		.loc 1 344 0 discriminator 2
 3150 075c 0D305BE5 		ldrb	r3, [fp, #-13]
 3151 0760 013083E2 		add	r3, r3, #1
 3152 0764 0D304BE5 		strb	r3, [fp, #-13]
 3153              	.L64:
 344:../proyecto.c ****     for( i=0; i<life.num_plots; i++ )           // Dibuja los corazones en todas sus posiciones pos
 3154              		.loc 1 344 0 is_stmt 0 discriminator 1
 3155 0768 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 3156 076c 0338A0E1 		mov	r3, r3, asl #16
 3157 0770 2328A0E1 		mov	r2, r3, lsr #16
 3158 0774 6C309FE5 		ldr	r3, .L66+12
 3159 0778 B430D3E1 		ldrh	r3, [r3, #4]
 3160 077c 030052E1 		cmp	r2, r3
 3161 0780 EFFFFF3A 		bcc	.L65
 346:../proyecto.c **** 
 347:../proyecto.c ****     dummy_init();                               // Inicializa las tareas
 3162              		.loc 1 347 0 is_stmt 1
 3163 0784 FEFFFFEB 		bl	dummy_init
 348:../proyecto.c ****     count_init();
 3164              		.loc 1 348 0
 3165 0788 FEFFFFEB 		bl	count_init
 349:../proyecto.c **** 
 350:../proyecto.c **** 
 351:../proyecto.c **** 	segs_putchar(vidas); 						//Muestra vidas en el display de 7 segmentos.
 3166              		.loc 1 351 0
 3167 078c 58309FE5 		ldr	r3, .L66+16
 3168 0790 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3169 0794 0300A0E1 		mov	r0, r3
 3170 0798 FEFFFFEB 		bl	segs_putchar
 352:../proyecto.c **** 
 353:../proyecto.c **** 	pause=FALSE;
 3171              		.loc 1 353 0
 3172 079c 4C309FE5 		ldr	r3, .L66+20
 3173 07a0 0020A0E3 		mov	r2, #0
 3174 07a4 0020C3E5 		strb	r2, [r3, #0]
 354:../proyecto.c **** 	final = FALSE;
 3175              		.loc 1 354 0
 3176 07a8 44309FE5 		ldr	r3, .L66+24
 3177 07ac 0020A0E3 		mov	r2, #0
 3178 07b0 0020C3E5 		strb	r2, [r3, #0]
 355:../proyecto.c ****     gameOver = FALSE;
 3179              		.loc 1 355 0
 3180 07b4 3C309FE5 		ldr	r3, .L66+28
 3181 07b8 0020A0E3 		mov	r2, #0
 3182 07bc 0020C3E5 		strb	r2, [r3, #0]
 356:../proyecto.c **** 
 357:../proyecto.c ****     fifo_init();                                  // Inicializa cola de funciones
 3183              		.loc 1 357 0
 3184 07c0 FEFFFFEB 		bl	fifo_init
 358:../proyecto.c ****     timer0_open_tick( isr_tick, TICKS_PER_SEC );  // Instala isr_tick como RTI del timer0
 3185              		.loc 1 358 0
 3186 07c4 30009FE5 		ldr	r0, .L66+32
 3187 07c8 6410A0E3 		mov	r1, #100
 3188 07cc FEFFFFEB 		bl	timer0_open_tick
 359:../proyecto.c **** 
 360:../proyecto.c **** }
 3189              		.loc 1 360 0
 3190 07d0 0CD04BE2 		sub	sp, fp, #12
 3191 07d4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3192 07d8 1EFF2FE1 		bx	lr
 3193              	.L67:
 3194              		.align	2
 3195              	.L66:
 3196 07dc 0000250C 		.word	203751424
 3197 07e0 00000000 		.word	firemen
 3198 07e4 00000000 		.word	firemenPos
 3199 07e8 00000000 		.word	life
 3200 07ec 00000000 		.word	vidas
 3201 07f0 00000000 		.word	pause
 3202 07f4 00000000 		.word	final
 3203 07f8 00000000 		.word	gameOver
 3204 07fc 00000000 		.word	isr_tick
 3205              		.cfi_endproc
 3206              	.LFE7:
 3208              		.section	.rodata
 3209 0169 000000   		.align	2
 3210              	.LC4:
 3211 016c 50756C73 		.ascii	"Pulse keypad 0 para reiniciar\000"
 3211      65206B65 
 3211      79706164 
 3211      20302070 
 3211      61726120 
 3212 018a 0000     		.text
 3213              		.align	2
 3214              		.global	pantalla_final
 3216              	pantalla_final:
 3217              	.LFB8:
 361:../proyecto.c **** 
 362:../proyecto.c **** void pantalla_final( void ){
 3218              		.loc 1 362 0
 3219              		.cfi_startproc
 3220              		@ Function supports interworking.
 3221              		@ args = 0, pretend = 0, frame = 0
 3222              		@ frame_needed = 1, uses_anonymous_args = 0
 3223 0800 0DC0A0E1 		mov	ip, sp
 3224              	.LCFI16:
 3225              		.cfi_def_cfa_register 12
 3226 0804 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3227 0808 04B04CE2 		sub	fp, ip, #4
 3228              		.cfi_offset 14, -8
 3229              		.cfi_offset 13, -12
 3230              		.cfi_offset 11, -16
 3231              	.LCFI17:
 3232              		.cfi_def_cfa 11, 4
 363:../proyecto.c **** 	final = TRUE;
 3233              		.loc 1 363 0
 3234 080c 68309FE5 		ldr	r3, .L71
 3235 0810 0120A0E3 		mov	r2, #1
 3236 0814 0020C3E5 		strb	r2, [r3, #0]
 364:../proyecto.c **** 	timer0_close();
 3237              		.loc 1 364 0
 3238 0818 FEFFFFEB 		bl	timer0_close
 365:../proyecto.c **** 	lcd_clear();
 3239              		.loc 1 365 0
 3240 081c FEFFFFEB 		bl	lcd_clear
 366:../proyecto.c **** 	if (vidas==0){
 3241              		.loc 1 366 0
 3242 0820 58309FE5 		ldr	r3, .L71+4
 3243 0824 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3244 0828 000053E3 		cmp	r3, #0
 3245 082c 0700001A 		bne	.L69
 367:../proyecto.c **** 		lcd_putWallpaper( GAME_OVER );
 3246              		.loc 1 367 0
 3247 0830 4C009FE5 		ldr	r0, .L71+8
 3248 0834 FEFFFFEB 		bl	lcd_putWallpaper
 368:../proyecto.c **** 		lcd_puts(45, 7, BLACK, "Pulse keypad 0 para reiniciar");
 3249              		.loc 1 368 0
 3250 0838 2D00A0E3 		mov	r0, #45
 3251 083c 0710A0E3 		mov	r1, #7
 3252 0840 0F20A0E3 		mov	r2, #15
 3253 0844 3C309FE5 		ldr	r3, .L71+12
 3254 0848 FEFFFFEB 		bl	lcd_puts
 3255 084c 040000EA 		b	.L70
 3256              	.L69:
 369:../proyecto.c **** 	}else{
 370:../proyecto.c **** 		lcd_putWallpaper( WIN );
 3257              		.loc 1 370 0
 3258 0850 34009FE5 		ldr	r0, .L71+16
 3259 0854 FEFFFFEB 		bl	lcd_putWallpaper
 371:../proyecto.c ****         gameOver = TRUE;                    // ... señaliza fin del juego
 3260              		.loc 1 371 0
 3261 0858 30309FE5 		ldr	r3, .L71+20
 3262 085c 0120A0E3 		mov	r2, #1
 3263 0860 0020C3E5 		strb	r2, [r3, #0]
 3264              	.L70:
 372:../proyecto.c **** 	}
 373:../proyecto.c ****     timer0_open_tick( isr_tick, TICKS_PER_SEC );  // Instala isr_tick como RTI del timer0
 3265              		.loc 1 373 0
 3266 0864 28009FE5 		ldr	r0, .L71+24
 3267 0868 6410A0E3 		mov	r1, #100
 3268 086c FEFFFFEB 		bl	timer0_open_tick
 374:../proyecto.c **** }
 3269              		.loc 1 374 0
 3270 0870 0CD04BE2 		sub	sp, fp, #12
 3271 0874 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3272 0878 1EFF2FE1 		bx	lr
 3273              	.L72:
 3274              		.align	2
 3275              	.L71:
 3276 087c 00000000 		.word	final
 3277 0880 00000000 		.word	vidas
 3278 0884 0000240C 		.word	203685888
 3279 0888 6C010000 		.word	.LC4
 3280 088c 0000230C 		.word	203620352
 3281 0890 00000000 		.word	gameOver
 3282 0894 00000000 		.word	isr_tick
 3283              		.cfi_endproc
 3284              	.LFE8:
 3286              		.align	2
 3287              		.global	sonido_move
 3289              	sonido_move:
 3290              	.LFB9:
 375:../proyecto.c **** 
 376:../proyecto.c **** void sonido_move(){
 3291              		.loc 1 376 0
 3292              		.cfi_startproc
 3293              		@ Function supports interworking.
 3294              		@ args = 0, pretend = 0, frame = 0
 3295              		@ frame_needed = 1, uses_anonymous_args = 0
 3296 0898 0DC0A0E1 		mov	ip, sp
 3297              	.LCFI18:
 3298              		.cfi_def_cfa_register 12
 3299 089c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3300 08a0 04B04CE2 		sub	fp, ip, #4
 3301              		.cfi_offset 14, -8
 3302              		.cfi_offset 13, -12
 3303              		.cfi_offset 11, -16
 3304              	.LCFI19:
 3305              		.cfi_def_cfa 11, 4
 377:../proyecto.c **** 	iis_play(MOVE,MOVE_SIZE,FALSE);
 3306              		.loc 1 377 0
 3307 08a4 14009FE5 		ldr	r0, .L74
 3308 08a8 191CA0E3 		mov	r1, #6400
 3309 08ac 0020A0E3 		mov	r2, #0
 3310 08b0 FEFFFFEB 		bl	iis_play
 378:../proyecto.c **** }
 3311              		.loc 1 378 0
 3312 08b4 0CD04BE2 		sub	sp, fp, #12
 3313 08b8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3314 08bc 1EFF2FE1 		bx	lr
 3315              	.L75:
 3316              		.align	2
 3317              	.L74:
 3318 08c0 00002A0C 		.word	204079104
 3319              		.cfi_endproc
 3320              	.LFE9:
 3322              		.align	2
 3323              		.global	sonido_cama
 3325              	sonido_cama:
 3326              	.LFB10:
 379:../proyecto.c **** 
 380:../proyecto.c **** void sonido_cama(){
 3327              		.loc 1 380 0
 3328              		.cfi_startproc
 3329              		@ Function supports interworking.
 3330              		@ args = 0, pretend = 0, frame = 0
 3331              		@ frame_needed = 1, uses_anonymous_args = 0
 3332 08c4 0DC0A0E1 		mov	ip, sp
 3333              	.LCFI20:
 3334              		.cfi_def_cfa_register 12
 3335 08c8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3336 08cc 04B04CE2 		sub	fp, ip, #4
 3337              		.cfi_offset 14, -8
 3338              		.cfi_offset 13, -12
 3339              		.cfi_offset 11, -16
 3340              	.LCFI21:
 3341              		.cfi_def_cfa 11, 4
 381:../proyecto.c **** 	iis_play(CAMA,CAMA_SIZE,FALSE);
 3342              		.loc 1 381 0
 3343 08d0 14009FE5 		ldr	r0, .L77
 3344 08d4 191CA0E3 		mov	r1, #6400
 3345 08d8 0020A0E3 		mov	r2, #0
 3346 08dc FEFFFFEB 		bl	iis_play
 382:../proyecto.c **** }
 3347              		.loc 1 382 0
 3348 08e0 0CD04BE2 		sub	sp, fp, #12
 3349 08e4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3350 08e8 1EFF2FE1 		bx	lr
 3351              	.L78:
 3352              		.align	2
 3353              	.L77:
 3354 08ec 0000280C 		.word	203948032
 3355              		.cfi_endproc
 3356              	.LFE10:
 3358              		.align	2
 3359              		.global	efecto_muerte
 3361              	efecto_muerte:
 3362              	.LFB11:
 383:../proyecto.c **** 
 384:../proyecto.c **** void efecto_muerte(){
 3363              		.loc 1 384 0
 3364              		.cfi_startproc
 3365              		@ Function supports interworking.
 3366              		@ args = 0, pretend = 0, frame = 8
 3367              		@ frame_needed = 1, uses_anonymous_args = 0
 3368 08f0 0DC0A0E1 		mov	ip, sp
 3369              	.LCFI22:
 3370              		.cfi_def_cfa_register 12
 3371 08f4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3372 08f8 04B04CE2 		sub	fp, ip, #4
 3373              		.cfi_offset 14, -8
 3374              		.cfi_offset 13, -12
 3375              		.cfi_offset 11, -16
 3376              	.LCFI23:
 3377              		.cfi_def_cfa 11, 4
 3378 08fc 08D04DE2 		sub	sp, sp, #8
 385:../proyecto.c **** 	uint8 i;
 386:../proyecto.c **** 	timer0_close();
 3379              		.loc 1 386 0
 3380 0900 FEFFFFEB 		bl	timer0_close
 387:../proyecto.c **** 	iis_play(MUERTE,MUERTE_SIZE,FALSE);
 3381              		.loc 1 387 0
 3382 0904 C8009FE5 		ldr	r0, .L84
 3383 0908 191AA0E3 		mov	r1, #102400
 3384 090c 0020A0E3 		mov	r2, #0
 3385 0910 FEFFFFEB 		bl	iis_play
 388:../proyecto.c **** 	if (vidas==0){
 3386              		.loc 1 388 0
 3387 0914 BC309FE5 		ldr	r3, .L84+4
 3388 0918 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3389 091c 000053E3 		cmp	r3, #0
 3390 0920 0200001A 		bne	.L80
 389:../proyecto.c **** 		fifo_enqueue(pantalla_final);
 3391              		.loc 1 389 0
 3392 0924 B0009FE5 		ldr	r0, .L84+8
 3393 0928 FEFFFFEB 		bl	fifo_enqueue
 3394 092c 0B0000EA 		b	.L81
 3395              	.L80:
 390:../proyecto.c **** 	}else{
 391:../proyecto.c **** 		sprite_clear(&crash, posCrash);
 3396              		.loc 1 391 0
 3397 0930 A8309FE5 		ldr	r3, .L84+12
 3398 0934 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3399 0938 A4009FE5 		ldr	r0, .L84+16
 3400 093c 0310A0E1 		mov	r1, r3
 3401 0940 FEFFFFEB 		bl	sprite_clear
 392:../proyecto.c **** 		lcd_putWallpaper(LANDSCAPE);
 3402              		.loc 1 392 0
 3403 0944 9C009FE5 		ldr	r0, .L84+20
 3404 0948 FEFFFFEB 		bl	lcd_putWallpaper
 393:../proyecto.c **** 		sprite_plot(&firemen, firemenPos);
 3405              		.loc 1 393 0
 3406 094c 98309FE5 		ldr	r3, .L84+24
 3407 0950 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3408 0954 94009FE5 		ldr	r0, .L84+28
 3409 0958 0310A0E1 		mov	r1, r3
 3410 095c FEFFFFEB 		bl	sprite_plot
 3411              	.L81:
 394:../proyecto.c **** 	}
 395:../proyecto.c **** 
 396:../proyecto.c **** 	for( i=0; i<vidas; i++ )           // Dibuja los corazones en todas sus posiciones posibles
 3412              		.loc 1 396 0
 3413 0960 0030A0E3 		mov	r3, #0
 3414 0964 0D304BE5 		strb	r3, [fp, #-13]
 3415 0968 080000EA 		b	.L82
 3416              	.L83:
 397:../proyecto.c **** 		sprite_plot( &life, i );
 3417              		.loc 1 397 0 discriminator 2
 3418 096c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 3419 0970 0338A0E1 		mov	r3, r3, asl #16
 3420 0974 2338A0E1 		mov	r3, r3, lsr #16
 3421 0978 74009FE5 		ldr	r0, .L84+32
 3422 097c 0310A0E1 		mov	r1, r3
 3423 0980 FEFFFFEB 		bl	sprite_plot
 396:../proyecto.c **** 	for( i=0; i<vidas; i++ )           // Dibuja los corazones en todas sus posiciones posibles
 3424              		.loc 1 396 0 discriminator 2
 3425 0984 0D305BE5 		ldrb	r3, [fp, #-13]
 3426 0988 013083E2 		add	r3, r3, #1
 3427 098c 0D304BE5 		strb	r3, [fp, #-13]
 3428              	.L82:
 396:../proyecto.c **** 	for( i=0; i<vidas; i++ )           // Dibuja los corazones en todas sus posiciones posibles
 3429              		.loc 1 396 0 is_stmt 0 discriminator 1
 3430 0990 40309FE5 		ldr	r3, .L84+4
 3431 0994 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3432 0998 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 3433 099c 030052E1 		cmp	r2, r3
 3434 09a0 F1FFFF3A 		bcc	.L83
 398:../proyecto.c **** 	lcd_putint_x2( 287, 0, BLACK, count );  // ... y lo dibuja
 3435              		.loc 1 398 0 is_stmt 1
 3436 09a4 4C309FE5 		ldr	r3, .L84+36
 3437 09a8 B030D3E1 		ldrh	r3, [r3, #0]
 3438 09ac 48009FE5 		ldr	r0, .L84+40
 3439 09b0 0010A0E3 		mov	r1, #0
 3440 09b4 0F20A0E3 		mov	r2, #15
 3441 09b8 FEFFFFEB 		bl	lcd_putint_x2
 399:../proyecto.c **** 
 400:../proyecto.c **** 	timer0_open_tick( isr_tick, TICKS_PER_SEC );  // Instala isr_tick como RTI del timer0
 3442              		.loc 1 400 0
 3443 09bc 3C009FE5 		ldr	r0, .L84+44
 3444 09c0 6410A0E3 		mov	r1, #100
 3445 09c4 FEFFFFEB 		bl	timer0_open_tick
 401:../proyecto.c **** 
 402:../proyecto.c **** 
 403:../proyecto.c **** }
 3446              		.loc 1 403 0
 3447 09c8 0CD04BE2 		sub	sp, fp, #12
 3448 09cc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3449 09d0 1EFF2FE1 		bx	lr
 3450              	.L85:
 3451              		.align	2
 3452              	.L84:
 3453 09d4 00002C0C 		.word	204210176
 3454 09d8 00000000 		.word	vidas
 3455 09dc 00000000 		.word	pantalla_final
 3456 09e0 00000000 		.word	posCrash
 3457 09e4 00000000 		.word	crash
 3458 09e8 0000250C 		.word	203751424
 3459 09ec 00000000 		.word	firemenPos
 3460 09f0 00000000 		.word	firemen
 3461 09f4 00000000 		.word	life
 3462 09f8 00000000 		.word	count
 3463 09fc 1F010000 		.word	287
 3464 0a00 00000000 		.word	isr_tick
 3465              		.cfi_endproc
 3466              	.LFE11:
 3468              		.align	2
 3469              		.global	count_init
 3471              	count_init:
 3472              	.LFB12:
 404:../proyecto.c **** 
 405:../proyecto.c **** /*******************************************************************/
 406:../proyecto.c **** 
 407:../proyecto.c **** void count_init( void )
 408:../proyecto.c **** {
 3473              		.loc 1 408 0
 3474              		.cfi_startproc
 3475              		@ Function supports interworking.
 3476              		@ args = 0, pretend = 0, frame = 0
 3477              		@ frame_needed = 1, uses_anonymous_args = 0
 3478 0a04 0DC0A0E1 		mov	ip, sp
 3479              	.LCFI24:
 3480              		.cfi_def_cfa_register 12
 3481 0a08 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3482 0a0c 04B04CE2 		sub	fp, ip, #4
 3483              		.cfi_offset 14, -8
 3484              		.cfi_offset 13, -12
 3485              		.cfi_offset 11, -16
 3486              	.LCFI25:
 3487              		.cfi_def_cfa 11, 4
 409:../proyecto.c ****     count = 0;                              // Inicializa el contador de dummies salvados...
 3488              		.loc 1 409 0
 3489 0a10 28309FE5 		ldr	r3, .L87
 3490 0a14 0020A0E3 		mov	r2, #0
 3491 0a18 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 410:../proyecto.c ****     lcd_putint_x2( 287, 0, BLACK, count );  // ... y lo dibuja
 3492              		.loc 1 410 0
 3493 0a1c 1C309FE5 		ldr	r3, .L87
 3494 0a20 B030D3E1 		ldrh	r3, [r3, #0]
 3495 0a24 18009FE5 		ldr	r0, .L87+4
 3496 0a28 0010A0E3 		mov	r1, #0
 3497 0a2c 0F20A0E3 		mov	r2, #15
 3498 0a30 FEFFFFEB 		bl	lcd_putint_x2
 411:../proyecto.c **** }
 3499              		.loc 1 411 0
 3500 0a34 0CD04BE2 		sub	sp, fp, #12
 3501 0a38 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3502 0a3c 1EFF2FE1 		bx	lr
 3503              	.L88:
 3504              		.align	2
 3505              	.L87:
 3506 0a40 00000000 		.word	count
 3507 0a44 1F010000 		.word	287
 3508              		.cfi_endproc
 3509              	.LFE12:
 3511              		.align	2
 3512              		.global	count_inc
 3514              	count_inc:
 3515              	.LFB13:
 412:../proyecto.c **** 
 413:../proyecto.c **** void count_inc( void )
 414:../proyecto.c **** {
 3516              		.loc 1 414 0
 3517              		.cfi_startproc
 3518              		@ Function supports interworking.
 3519              		@ args = 0, pretend = 0, frame = 0
 3520              		@ frame_needed = 1, uses_anonymous_args = 0
 3521 0a48 0DC0A0E1 		mov	ip, sp
 3522              	.LCFI26:
 3523              		.cfi_def_cfa_register 12
 3524 0a4c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3525 0a50 04B04CE2 		sub	fp, ip, #4
 3526              		.cfi_offset 14, -8
 3527              		.cfi_offset 13, -12
 3528              		.cfi_offset 11, -16
 3529              	.LCFI27:
 3530              		.cfi_def_cfa 11, 4
 415:../proyecto.c ****     count++; // Incrementa el contador de dummies salvados
 3531              		.loc 1 415 0
 3532 0a54 84309FE5 		ldr	r3, .L94
 3533 0a58 B030D3E1 		ldrh	r3, [r3, #0]
 3534 0a5c 013083E2 		add	r3, r3, #1
 3535 0a60 0338A0E1 		mov	r3, r3, asl #16
 3536 0a64 2328A0E1 		mov	r2, r3, lsr #16
 3537 0a68 70309FE5 		ldr	r3, .L94
 3538 0a6c B020C3E1 		strh	r2, [r3, #0]	@ movhi
 416:../proyecto.c ****     lcd_putint_x2( 287, 0, BLACK, count );
 3539              		.loc 1 416 0
 3540 0a70 68309FE5 		ldr	r3, .L94
 3541 0a74 B030D3E1 		ldrh	r3, [r3, #0]
 3542 0a78 64009FE5 		ldr	r0, .L94+4
 3543 0a7c 0010A0E3 		mov	r1, #0
 3544 0a80 0F20A0E3 		mov	r2, #15
 3545 0a84 FEFFFFEB 		bl	lcd_putint_x2
 417:../proyecto.c ****     switch(count){
 3546              		.loc 1 417 0
 3547 0a88 50309FE5 		ldr	r3, .L94
 3548 0a8c B030D3E1 		ldrh	r3, [r3, #0]
 3549 0a90 140053E3 		cmp	r3, #20
 3550 0a94 0700000A 		beq	.L92
 3551 0a98 1E0053E3 		cmp	r3, #30
 3552 0a9c 0900000A 		beq	.L93
 3553 0aa0 0A0053E3 		cmp	r3, #10
 3554 0aa4 0A00001A 		bne	.L89
 3555              	.L91:
 418:../proyecto.c ****     	case 10:
 419:../proyecto.c ****     		vDummy=40;
 3556              		.loc 1 419 0
 3557 0aa8 38309FE5 		ldr	r3, .L94+8
 3558 0aac 2820A0E3 		mov	r2, #40
 3559 0ab0 0020C3E5 		strb	r2, [r3, #0]
 420:../proyecto.c ****     		break;
 3560              		.loc 1 420 0
 3561 0ab4 060000EA 		b	.L89
 3562              	.L92:
 421:../proyecto.c ****     	case 20:
 422:../proyecto.c ****     		vDummy=30;
 3563              		.loc 1 422 0
 3564 0ab8 28309FE5 		ldr	r3, .L94+8
 3565 0abc 1E20A0E3 		mov	r2, #30
 3566 0ac0 0020C3E5 		strb	r2, [r3, #0]
 423:../proyecto.c ****     		break;
 3567              		.loc 1 423 0
 3568 0ac4 020000EA 		b	.L89
 3569              	.L93:
 424:../proyecto.c ****     	case 30:
 425:../proyecto.c ****     		fifo_enqueue(pantalla_final);
 3570              		.loc 1 425 0
 3571 0ac8 1C009FE5 		ldr	r0, .L94+12
 3572 0acc FEFFFFEB 		bl	fifo_enqueue
 426:../proyecto.c ****     		break;
 3573              		.loc 1 426 0
 3574 0ad0 0000A0E1 		mov	r0, r0	@ nop
 3575              	.L89:
 427:../proyecto.c ****     }
 428:../proyecto.c **** }
 3576              		.loc 1 428 0
 3577 0ad4 0CD04BE2 		sub	sp, fp, #12
 3578 0ad8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3579 0adc 1EFF2FE1 		bx	lr
 3580              	.L95:
 3581              		.align	2
 3582              	.L94:
 3583 0ae0 00000000 		.word	count
 3584 0ae4 1F010000 		.word	287
 3585 0ae8 00000000 		.word	vDummy
 3586 0aec 00000000 		.word	pantalla_final
 3587              		.cfi_endproc
 3588              	.LFE13:
 3590              		.align	2
 3591              		.global	isr_tick
 3593              	isr_tick:
 3594              	.LFB14:
 429:../proyecto.c **** 
 430:../proyecto.c **** /*******************************************************************/
 431:../proyecto.c **** 
 432:../proyecto.c **** void isr_tick( void )
 433:../proyecto.c **** {   
 3595              		.loc 1 433 0
 3596              		.cfi_startproc
 3597              		@ Interrupt Service Routine.
 3598              		@ args = 0, pretend = 0, frame = 0
 3599              		@ frame_needed = 1, uses_anonymous_args = 0
 3600 0af0 04C02DE5 		str	ip, [sp, #-4]!
 3601 0af4 0DC0A0E1 		mov	ip, sp
 3602              	.LCFI28:
 3603              		.cfi_def_cfa_register 12
 3604 0af8 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 3605 0afc 04B04CE2 		sub	fp, ip, #4
 3606              		.cfi_offset 14, -8
 3607              		.cfi_offset 13, -12
 3608              		.cfi_offset 11, -16
 3609              		.cfi_offset 3, -20
 3610              		.cfi_offset 2, -24
 3611              		.cfi_offset 1, -28
 3612              		.cfi_offset 0, -32
 3613              	.LCFI29:
 3614              		.cfi_def_cfa 11, 4
 434:../proyecto.c ****     static uint16 contTicks    = 50;
 435:../proyecto.c ****     static uint16 cont5ticks    = 5;
 436:../proyecto.c **** 
 437:../proyecto.c ****     if( !(--cont5ticks) )
 3615              		.loc 1 437 0
 3616 0b00 F4309FE5 		ldr	r3, .L100
 3617 0b04 B030D3E1 		ldrh	r3, [r3, #0]
 3618 0b08 013043E2 		sub	r3, r3, #1
 3619 0b0c 0338A0E1 		mov	r3, r3, asl #16
 3620 0b10 2328A0E1 		mov	r2, r3, lsr #16
 3621 0b14 E0309FE5 		ldr	r3, .L100
 3622 0b18 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3623 0b1c D8309FE5 		ldr	r3, .L100
 3624 0b20 B030D3E1 		ldrh	r3, [r3, #0]
 3625 0b24 000053E3 		cmp	r3, #0
 3626 0b28 0E00001A 		bne	.L97
 438:../proyecto.c **** 	{
 439:../proyecto.c **** 		cont5ticks = 5;
 3627              		.loc 1 439 0
 3628 0b2c C8309FE5 		ldr	r3, .L100
 3629 0b30 0520A0E3 		mov	r2, #5
 3630 0b34 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 440:../proyecto.c **** 		if (!final&&!pause)fifo_enqueue( pulsadores );
 3631              		.loc 1 440 0
 3632 0b38 C0309FE5 		ldr	r3, .L100+4
 3633 0b3c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3634 0b40 000053E3 		cmp	r3, #0
 3635 0b44 0500001A 		bne	.L98
 3636              		.loc 1 440 0 is_stmt 0 discriminator 1
 3637 0b48 B4309FE5 		ldr	r3, .L100+8
 3638 0b4c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3639 0b50 000053E3 		cmp	r3, #0
 3640 0b54 0100001A 		bne	.L98
 3641 0b58 A8009FE5 		ldr	r0, .L100+12
 3642 0b5c FEFFFFEB 		bl	fifo_enqueue
 3643              	.L98:
 441:../proyecto.c **** 		fifo_enqueue(keypad);
 3644              		.loc 1 441 0 is_stmt 1
 3645 0b60 A4009FE5 		ldr	r0, .L100+16
 3646 0b64 FEFFFFEB 		bl	fifo_enqueue
 3647              	.L97:
 442:../proyecto.c **** 	}
 443:../proyecto.c ****     if (!final&&!pause){
 3648              		.loc 1 443 0
 3649 0b68 90309FE5 		ldr	r3, .L100+4
 3650 0b6c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3651 0b70 000053E3 		cmp	r3, #0
 3652 0b74 1900001A 		bne	.L99
 3653              		.loc 1 443 0 is_stmt 0 discriminator 1
 3654 0b78 84309FE5 		ldr	r3, .L100+8
 3655 0b7c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3656 0b80 000053E3 		cmp	r3, #0
 3657 0b84 1500001A 		bne	.L99
 444:../proyecto.c **** 		if( !(--contTicks) )
 3658              		.loc 1 444 0 is_stmt 1
 3659 0b88 80309FE5 		ldr	r3, .L100+20
 3660 0b8c B030D3E1 		ldrh	r3, [r3, #0]
 3661 0b90 013043E2 		sub	r3, r3, #1
 3662 0b94 0338A0E1 		mov	r3, r3, asl #16
 3663 0b98 2328A0E1 		mov	r2, r3, lsr #16
 3664 0b9c 6C309FE5 		ldr	r3, .L100+20
 3665 0ba0 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3666 0ba4 64309FE5 		ldr	r3, .L100+20
 3667 0ba8 B030D3E1 		ldrh	r3, [r3, #0]
 3668 0bac 000053E3 		cmp	r3, #0
 3669 0bb0 0A00001A 		bne	.L99
 445:../proyecto.c **** 		{
 446:../proyecto.c **** 			contTicks = vDummy;
 3670              		.loc 1 446 0
 3671 0bb4 58309FE5 		ldr	r3, .L100+24
 3672 0bb8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3673 0bbc 0320A0E1 		mov	r2, r3
 3674 0bc0 48309FE5 		ldr	r3, .L100+20
 3675 0bc4 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 447:../proyecto.c **** 			fifo_enqueue( sonido_move);
 3676              		.loc 1 447 0
 3677 0bc8 48009FE5 		ldr	r0, .L100+28
 3678 0bcc FEFFFFEB 		bl	fifo_enqueue
 448:../proyecto.c **** 			fifo_enqueue( dummy_move );
 3679              		.loc 1 448 0
 3680 0bd0 44009FE5 		ldr	r0, .L100+32
 3681 0bd4 FEFFFFEB 		bl	fifo_enqueue
 449:../proyecto.c **** 			fifo_enqueue( dummy_dead );
 3682              		.loc 1 449 0
 3683 0bd8 40009FE5 		ldr	r0, .L100+36
 3684 0bdc FEFFFFEB 		bl	fifo_enqueue
 3685              	.L99:
 450:../proyecto.c **** 		}
 451:../proyecto.c **** 	}
 452:../proyecto.c **** 
 453:../proyecto.c ****     I_ISPC = BIT_TIMER0;
 3686              		.loc 1 453 0
 3687 0be0 3C309FE5 		ldr	r3, .L100+40
 3688 0be4 022AA0E3 		mov	r2, #8192
 3689 0be8 002083E5 		str	r2, [r3, #0]
 454:../proyecto.c **** };
 3690              		.loc 1 454 0
 3691 0bec 1CD04BE2 		sub	sp, fp, #28
 3692 0bf0 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 3693 0bf4 04C09DE4 		ldmfd	sp!, {ip}
 3694 0bf8 04F05EE2 		subs	pc, lr, #4
 3695              	.L101:
 3696              		.align	2
 3697              	.L100:
 3698 0bfc 00000000 		.word	cont5ticks.4283
 3699 0c00 00000000 		.word	final
 3700 0c04 00000000 		.word	pause
 3701 0c08 00000000 		.word	pulsadores
 3702 0c0c 00000000 		.word	keypad
 3703 0c10 02000000 		.word	contTicks.4282
 3704 0c14 00000000 		.word	vDummy
 3705 0c18 00000000 		.word	sonido_move
 3706 0c1c 00000000 		.word	dummy_move
 3707 0c20 00000000 		.word	dummy_dead
 3708 0c24 2400E001 		.word	31457316
 3709              		.cfi_endproc
 3710              	.LFE14:
 3712              		.align	2
 3713              		.global	sprite_plot
 3715              	sprite_plot:
 3716              	.LFB15:
 455:../proyecto.c **** 
 456:../proyecto.c **** 
 457:../proyecto.c **** 
 458:../proyecto.c **** /*******************************************************************/
 459:../proyecto.c **** 
 460:../proyecto.c **** extern uint8 lcd_buffer[];
 461:../proyecto.c **** 
 462:../proyecto.c **** void lcd_putBmp( uint8 *bmp, uint16 x, uint16 y, uint16 xsize, uint16 ysize );
 463:../proyecto.c **** void lcd_clearWindow( uint16 x, uint16 y, uint16 xsize, uint16 ysize );
 464:../proyecto.c **** 
 465:../proyecto.c **** void sprite_plot( sprite_t const *sprite, uint16 num )
 466:../proyecto.c **** {
 3717              		.loc 1 466 0
 3718              		.cfi_startproc
 3719              		@ Function supports interworking.
 3720              		@ args = 0, pretend = 0, frame = 8
 3721              		@ frame_needed = 1, uses_anonymous_args = 0
 3722 0c28 0DC0A0E1 		mov	ip, sp
 3723              	.LCFI30:
 3724              		.cfi_def_cfa_register 12
 3725 0c2c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3726 0c30 04B04CE2 		sub	fp, ip, #4
 3727              		.cfi_offset 14, -8
 3728              		.cfi_offset 13, -12
 3729              		.cfi_offset 11, -16
 3730              	.LCFI31:
 3731              		.cfi_def_cfa 11, 4
 3732 0c34 10D04DE2 		sub	sp, sp, #16
 3733 0c38 10000BE5 		str	r0, [fp, #-16]
 3734 0c3c 0130A0E1 		mov	r3, r1
 3735 0c40 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 467:../proyecto.c ****     lcd_putBmp( sprite->plots[num].plot, sprite->plots[num].x, sprite->plots[num].y, sprite->width,
 3736              		.loc 1 467 0
 3737 0c44 B2315BE1 		ldrh	r3, [fp, #-18]
 3738 0c48 10101BE5 		ldr	r1, [fp, #-16]
 3739 0c4c 012083E2 		add	r2, r3, #1
 3740 0c50 0430A0E3 		mov	r3, #4
 3741 0c54 8221A0E1 		mov	r2, r2, asl #3
 3742 0c58 022081E0 		add	r2, r1, r2
 3743 0c5c 033082E0 		add	r3, r2, r3
 3744 0c60 000093E5 		ldr	r0, [r3, #0]
 3745 0c64 B2315BE1 		ldrh	r3, [fp, #-18]
 3746 0c68 10201BE5 		ldr	r2, [fp, #-16]
 3747 0c6c 013083E2 		add	r3, r3, #1
 3748 0c70 8331A0E1 		mov	r3, r3, asl #3
 3749 0c74 033082E0 		add	r3, r2, r3
 3750 0c78 B010D3E1 		ldrh	r1, [r3, #0]
 3751 0c7c B2315BE1 		ldrh	r3, [fp, #-18]
 3752 0c80 10C01BE5 		ldr	ip, [fp, #-16]
 3753 0c84 012083E2 		add	r2, r3, #1
 3754 0c88 0230A0E3 		mov	r3, #2
 3755 0c8c 8221A0E1 		mov	r2, r2, asl #3
 3756 0c90 02208CE0 		add	r2, ip, r2
 3757 0c94 033082E0 		add	r3, r2, r3
 3758 0c98 B020D3E1 		ldrh	r2, [r3, #0]
 3759 0c9c 10301BE5 		ldr	r3, [fp, #-16]
 3760 0ca0 B030D3E1 		ldrh	r3, [r3, #0]
 3761 0ca4 10C01BE5 		ldr	ip, [fp, #-16]
 3762 0ca8 B2C0DCE1 		ldrh	ip, [ip, #2]
 3763 0cac 00C08DE5 		str	ip, [sp, #0]
 3764 0cb0 FEFFFFEB 		bl	lcd_putBmp
 468:../proyecto.c **** }
 3765              		.loc 1 468 0
 3766 0cb4 0CD04BE2 		sub	sp, fp, #12
 3767 0cb8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3768 0cbc 1EFF2FE1 		bx	lr
 3769              		.cfi_endproc
 3770              	.LFE15:
 3772              		.align	2
 3773              		.global	sprite_clear
 3775              	sprite_clear:
 3776              	.LFB16:
 469:../proyecto.c **** 
 470:../proyecto.c **** void sprite_clear( sprite_t const *sprite, uint16 num )
 471:../proyecto.c **** {
 3777              		.loc 1 471 0
 3778              		.cfi_startproc
 3779              		@ Function supports interworking.
 3780              		@ args = 0, pretend = 0, frame = 8
 3781              		@ frame_needed = 1, uses_anonymous_args = 0
 3782 0cc0 0DC0A0E1 		mov	ip, sp
 3783              	.LCFI32:
 3784              		.cfi_def_cfa_register 12
 3785 0cc4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3786 0cc8 04B04CE2 		sub	fp, ip, #4
 3787              		.cfi_offset 14, -8
 3788              		.cfi_offset 13, -12
 3789              		.cfi_offset 11, -16
 3790              	.LCFI33:
 3791              		.cfi_def_cfa 11, 4
 3792 0ccc 08D04DE2 		sub	sp, sp, #8
 3793 0cd0 10000BE5 		str	r0, [fp, #-16]
 3794 0cd4 0130A0E1 		mov	r3, r1
 3795 0cd8 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 472:../proyecto.c ****     lcd_clearWindow( sprite->plots[num].x, sprite->plots[num].y, sprite->width, sprite->height );
 3796              		.loc 1 472 0
 3797 0cdc B2315BE1 		ldrh	r3, [fp, #-18]
 3798 0ce0 10201BE5 		ldr	r2, [fp, #-16]
 3799 0ce4 013083E2 		add	r3, r3, #1
 3800 0ce8 8331A0E1 		mov	r3, r3, asl #3
 3801 0cec 033082E0 		add	r3, r2, r3
 3802 0cf0 B000D3E1 		ldrh	r0, [r3, #0]
 3803 0cf4 B2315BE1 		ldrh	r3, [fp, #-18]
 3804 0cf8 10101BE5 		ldr	r1, [fp, #-16]
 3805 0cfc 012083E2 		add	r2, r3, #1
 3806 0d00 0230A0E3 		mov	r3, #2
 3807 0d04 8221A0E1 		mov	r2, r2, asl #3
 3808 0d08 022081E0 		add	r2, r1, r2
 3809 0d0c 033082E0 		add	r3, r2, r3
 3810 0d10 B010D3E1 		ldrh	r1, [r3, #0]
 3811 0d14 10301BE5 		ldr	r3, [fp, #-16]
 3812 0d18 B020D3E1 		ldrh	r2, [r3, #0]
 3813 0d1c 10301BE5 		ldr	r3, [fp, #-16]
 3814 0d20 B230D3E1 		ldrh	r3, [r3, #2]
 3815 0d24 FEFFFFEB 		bl	lcd_clearWindow
 473:../proyecto.c **** }
 3816              		.loc 1 473 0
 3817 0d28 0CD04BE2 		sub	sp, fp, #12
 3818 0d2c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3819 0d30 1EFF2FE1 		bx	lr
 3820              		.cfi_endproc
 3821              	.LFE16:
 3823              		.align	2
 3824              		.global	lcd_putBmp
 3826              	lcd_putBmp:
 3827              	.LFB17:
 474:../proyecto.c **** 
 475:../proyecto.c **** /*
 476:../proyecto.c **** ** Muestra un BMP de tamaño (xsize, ysize) píxeles en la posición (x,y)
 477:../proyecto.c **** ** Esta función es una generalización de lcd_putWallpaper
 478:../proyecto.c **** */
 479:../proyecto.c **** void lcd_putBmp( uint8 *bmp, uint16 x, uint16 y, uint16 xsize, uint16 ysize )
 480:../proyecto.c **** {
 3828              		.loc 1 480 0
 3829              		.cfi_startproc
 3830              		@ Function supports interworking.
 3831              		@ args = 4, pretend = 0, frame = 32
 3832              		@ frame_needed = 1, uses_anonymous_args = 0
 3833 0d34 0DC0A0E1 		mov	ip, sp
 3834              	.LCFI34:
 3835              		.cfi_def_cfa_register 12
 3836 0d38 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3837 0d3c 04B04CE2 		sub	fp, ip, #4
 3838              		.cfi_offset 14, -8
 3839              		.cfi_offset 13, -12
 3840              		.cfi_offset 11, -16
 3841              	.LCFI35:
 3842              		.cfi_def_cfa 11, 4
 3843 0d40 20D04DE2 		sub	sp, sp, #32
 3844 0d44 20000BE5 		str	r0, [fp, #-32]
 3845 0d48 B2124BE1 		strh	r1, [fp, #-34]	@ movhi
 3846 0d4c B4224BE1 		strh	r2, [fp, #-36]	@ movhi
 3847 0d50 B6324BE1 		strh	r3, [fp, #-38]	@ movhi
 481:../proyecto.c **** 	uint32 headerSize;
 482:../proyecto.c **** 
 483:../proyecto.c **** 	uint16 xSrc, ySrc, yDst;
 484:../proyecto.c **** 	uint16 offsetSrc, offsetDst;
 485:../proyecto.c **** 
 486:../proyecto.c **** 	headerSize = bmp[10] + (bmp[11] << 8) + (bmp[12] << 16) + (bmp[13] << 24);
 3848              		.loc 1 486 0
 3849 0d54 20301BE5 		ldr	r3, [fp, #-32]
 3850 0d58 0A3083E2 		add	r3, r3, #10
 3851 0d5c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3852 0d60 0320A0E1 		mov	r2, r3
 3853 0d64 20301BE5 		ldr	r3, [fp, #-32]
 3854 0d68 0B3083E2 		add	r3, r3, #11
 3855 0d6c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3856 0d70 0334A0E1 		mov	r3, r3, asl #8
 3857 0d74 032082E0 		add	r2, r2, r3
 3858 0d78 20301BE5 		ldr	r3, [fp, #-32]
 3859 0d7c 0C3083E2 		add	r3, r3, #12
 3860 0d80 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3861 0d84 0338A0E1 		mov	r3, r3, asl #16
 3862 0d88 032082E0 		add	r2, r2, r3
 3863 0d8c 20301BE5 		ldr	r3, [fp, #-32]
 3864 0d90 0D3083E2 		add	r3, r3, #13
 3865 0d94 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3866 0d98 033CA0E1 		mov	r3, r3, asl #24
 3867 0d9c 033082E0 		add	r3, r2, r3
 3868 0da0 18300BE5 		str	r3, [fp, #-24]
 487:../proyecto.c **** 
 488:../proyecto.c **** 	bmp = bmp + headerSize; 
 3869              		.loc 1 488 0
 3870 0da4 20201BE5 		ldr	r2, [fp, #-32]
 3871 0da8 18301BE5 		ldr	r3, [fp, #-24]
 3872 0dac 033082E0 		add	r3, r2, r3
 3873 0db0 20300BE5 		str	r3, [fp, #-32]
 489:../proyecto.c **** 
 490:../proyecto.c **** 	for( ySrc=0, yDst=ysize-1; ySrc<ysize; ySrc++, yDst-- )
 3874              		.loc 1 490 0
 3875 0db4 0030A0E3 		mov	r3, #0
 3876 0db8 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 3877 0dbc B430DBE1 		ldrh	r3, [fp, #4]	@ movhi
 3878 0dc0 013043E2 		sub	r3, r3, #1
 3879 0dc4 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 3880 0dc8 380000EA 		b	.L105
 3881              	.L108:
 491:../proyecto.c **** 	{
 492:../proyecto.c **** 		offsetDst = (yDst+y)*LCD_WIDTH/2+x/2;
 3882              		.loc 1 492 0
 3883 0dcc B2215BE1 		ldrh	r2, [fp, #-18]
 3884 0dd0 B4325BE1 		ldrh	r3, [fp, #-36]
 3885 0dd4 032082E0 		add	r2, r2, r3
 3886 0dd8 0230A0E1 		mov	r3, r2
 3887 0ddc 0331A0E1 		mov	r3, r3, asl #2
 3888 0de0 023083E0 		add	r3, r3, r2
 3889 0de4 0333A0E1 		mov	r3, r3, asl #6
 3890 0de8 A32FA0E1 		mov	r2, r3, lsr #31
 3891 0dec 033082E0 		add	r3, r2, r3
 3892 0df0 C330A0E1 		mov	r3, r3, asr #1
 3893 0df4 0338A0E1 		mov	r3, r3, asl #16
 3894 0df8 2328A0E1 		mov	r2, r3, lsr #16
 3895 0dfc B2325BE1 		ldrh	r3, [fp, #-34]
 3896 0e00 A330A0E1 		mov	r3, r3, lsr #1
 3897 0e04 0338A0E1 		mov	r3, r3, asl #16
 3898 0e08 2338A0E1 		mov	r3, r3, lsr #16
 3899 0e0c 033082E0 		add	r3, r2, r3
 3900 0e10 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 493:../proyecto.c **** 		offsetSrc = ySrc*xsize/2;
 3901              		.loc 1 493 0
 3902 0e14 B0315BE1 		ldrh	r3, [fp, #-16]
 3903 0e18 B6225BE1 		ldrh	r2, [fp, #-38]
 3904 0e1c 920303E0 		mul	r3, r2, r3
 3905 0e20 A32FA0E1 		mov	r2, r3, lsr #31
 3906 0e24 033082E0 		add	r3, r2, r3
 3907 0e28 C330A0E1 		mov	r3, r3, asr #1
 3908 0e2c BC314BE1 		strh	r3, [fp, #-28]	@ movhi
 494:../proyecto.c **** 		for( xSrc=0; xSrc<xsize/2; xSrc++ )
 3909              		.loc 1 494 0
 3910 0e30 0030A0E3 		mov	r3, #0
 3911 0e34 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 3912 0e38 0F0000EA 		b	.L106
 3913              	.L107:
 495:../proyecto.c **** 			lcd_buffer[offsetDst+xSrc] = ~bmp[offsetSrc+xSrc];
 3914              		.loc 1 495 0 discriminator 2
 3915 0e3c BA215BE1 		ldrh	r2, [fp, #-26]
 3916 0e40 BE305BE1 		ldrh	r3, [fp, #-14]
 3917 0e44 033082E0 		add	r3, r2, r3
 3918 0e48 BC115BE1 		ldrh	r1, [fp, #-28]
 3919 0e4c BE205BE1 		ldrh	r2, [fp, #-14]
 3920 0e50 022081E0 		add	r2, r1, r2
 3921 0e54 20101BE5 		ldr	r1, [fp, #-32]
 3922 0e58 022081E0 		add	r2, r1, r2
 3923 0e5c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 3924 0e60 0220E0E1 		mvn	r2, r2
 3925 0e64 FF1002E2 		and	r1, r2, #255
 3926 0e68 5C209FE5 		ldr	r2, .L109
 3927 0e6c 0310C2E7 		strb	r1, [r2, r3]
 494:../proyecto.c **** 		for( xSrc=0; xSrc<xsize/2; xSrc++ )
 3928              		.loc 1 494 0 discriminator 2
 3929 0e70 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 3930 0e74 013083E2 		add	r3, r3, #1
 3931 0e78 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 3932              	.L106:
 494:../proyecto.c **** 		for( xSrc=0; xSrc<xsize/2; xSrc++ )
 3933              		.loc 1 494 0 is_stmt 0 discriminator 1
 3934 0e7c B6325BE1 		ldrh	r3, [fp, #-38]
 3935 0e80 A330A0E1 		mov	r3, r3, lsr #1
 3936 0e84 0338A0E1 		mov	r3, r3, asl #16
 3937 0e88 2338A0E1 		mov	r3, r3, lsr #16
 3938 0e8c BE205BE1 		ldrh	r2, [fp, #-14]
 3939 0e90 030052E1 		cmp	r2, r3
 3940 0e94 E8FFFF3A 		bcc	.L107
 490:../proyecto.c **** 	for( ySrc=0, yDst=ysize-1; ySrc<ysize; ySrc++, yDst-- )
 3941              		.loc 1 490 0 is_stmt 1
 3942 0e98 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 3943 0e9c 013083E2 		add	r3, r3, #1
 3944 0ea0 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 3945 0ea4 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 3946 0ea8 013043E2 		sub	r3, r3, #1
 3947 0eac B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 3948              	.L105:
 490:../proyecto.c **** 	for( ySrc=0, yDst=ysize-1; ySrc<ysize; ySrc++, yDst-- )
 3949              		.loc 1 490 0 is_stmt 0 discriminator 1
 3950 0eb0 B0215BE1 		ldrh	r2, [fp, #-16]
 3951 0eb4 B430DBE1 		ldrh	r3, [fp, #4]
 3952 0eb8 030052E1 		cmp	r2, r3
 3953 0ebc C2FFFF3A 		bcc	.L108
 496:../proyecto.c **** 	}
 497:../proyecto.c **** }
 3954              		.loc 1 497 0 is_stmt 1
 3955 0ec0 0CD04BE2 		sub	sp, fp, #12
 3956 0ec4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3957 0ec8 1EFF2FE1 		bx	lr
 3958              	.L110:
 3959              		.align	2
 3960              	.L109:
 3961 0ecc 00000000 		.word	lcd_buffer
 3962              		.cfi_endproc
 3963              	.LFE17:
 3965              		.align	2
 3966              		.global	lcd_clearWindow
 3968              	lcd_clearWindow:
 3969              	.LFB18:
 498:../proyecto.c **** 
 499:../proyecto.c **** /*
 500:../proyecto.c **** ** Borra una porción de la pantalla de tamaño (xsize, ysize) píxeles desde la posición (x,y)
 501:../proyecto.c **** ** Esta función es una generalización de lcd_clear
 502:../proyecto.c **** */
 503:../proyecto.c **** void lcd_clearWindow( uint16 x, uint16 y, uint16 xsize, uint16 ysize )
 504:../proyecto.c **** {
 3970              		.loc 1 504 0
 3971              		.cfi_startproc
 3972              		@ Function supports interworking.
 3973              		@ args = 0, pretend = 0, frame = 16
 3974              		@ frame_needed = 1, uses_anonymous_args = 0
 3975 0ed0 0DC0A0E1 		mov	ip, sp
 3976              	.LCFI36:
 3977              		.cfi_def_cfa_register 12
 3978 0ed4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3979 0ed8 04B04CE2 		sub	fp, ip, #4
 3980              		.cfi_offset 14, -8
 3981              		.cfi_offset 13, -12
 3982              		.cfi_offset 11, -16
 3983              	.LCFI37:
 3984              		.cfi_def_cfa 11, 4
 3985 0edc 10D04DE2 		sub	sp, sp, #16
 3986 0ee0 B6014BE1 		strh	r0, [fp, #-22]	@ movhi
 3987 0ee4 B8114BE1 		strh	r1, [fp, #-24]	@ movhi
 3988 0ee8 BA214BE1 		strh	r2, [fp, #-26]	@ movhi
 3989 0eec BC314BE1 		strh	r3, [fp, #-28]	@ movhi
 505:../proyecto.c **** 	uint16 xi, yi;
 506:../proyecto.c **** 
 507:../proyecto.c **** 	for( yi=y; yi<y+ysize; yi++ )
 3990              		.loc 1 507 0
 3991 0ef0 B8315BE1 		ldrh	r3, [fp, #-24]	@ movhi
 3992 0ef4 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 3993 0ef8 140000EA 		b	.L112
 3994              	.L115:
 508:../proyecto.c **** 		for( xi=x; xi<x+xsize; xi++ )
 3995              		.loc 1 508 0
 3996 0efc B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3997 0f00 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 3998 0f04 080000EA 		b	.L113
 3999              	.L114:
 509:../proyecto.c **** 			lcd_putpixel( xi, yi, WHITE );
 4000              		.loc 1 509 0 discriminator 2
 4001 0f08 BE205BE1 		ldrh	r2, [fp, #-14]
 4002 0f0c B0315BE1 		ldrh	r3, [fp, #-16]
 4003 0f10 0200A0E1 		mov	r0, r2
 4004 0f14 0310A0E1 		mov	r1, r3
 4005 0f18 0020A0E3 		mov	r2, #0
 4006 0f1c FEFFFFEB 		bl	lcd_putpixel
 508:../proyecto.c **** 		for( xi=x; xi<x+xsize; xi++ )
 4007              		.loc 1 508 0 discriminator 2
 4008 0f20 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4009 0f24 013083E2 		add	r3, r3, #1
 4010 0f28 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 4011              	.L113:
 508:../proyecto.c **** 		for( xi=x; xi<x+xsize; xi++ )
 4012              		.loc 1 508 0 is_stmt 0 discriminator 1
 4013 0f2c BE205BE1 		ldrh	r2, [fp, #-14]
 4014 0f30 B6115BE1 		ldrh	r1, [fp, #-22]
 4015 0f34 BA315BE1 		ldrh	r3, [fp, #-26]
 4016 0f38 033081E0 		add	r3, r1, r3
 4017 0f3c 030052E1 		cmp	r2, r3
 4018 0f40 F0FFFFBA 		blt	.L114
 507:../proyecto.c **** 	for( yi=y; yi<y+ysize; yi++ )
 4019              		.loc 1 507 0 is_stmt 1
 4020 0f44 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 4021 0f48 013083E2 		add	r3, r3, #1
 4022 0f4c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 4023              	.L112:
 507:../proyecto.c **** 	for( yi=y; yi<y+ysize; yi++ )
 4024              		.loc 1 507 0 is_stmt 0 discriminator 1
 4025 0f50 B0215BE1 		ldrh	r2, [fp, #-16]
 4026 0f54 B8115BE1 		ldrh	r1, [fp, #-24]
 4027 0f58 BC315BE1 		ldrh	r3, [fp, #-28]
 4028 0f5c 033081E0 		add	r3, r1, r3
 4029 0f60 030052E1 		cmp	r2, r3
 4030 0f64 E4FFFFBA 		blt	.L115
 510:../proyecto.c **** }
 4031              		.loc 1 510 0 is_stmt 1
 4032 0f68 0CD04BE2 		sub	sp, fp, #12
 4033 0f6c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4034 0f70 1EFF2FE1 		bx	lr
 4035              		.cfi_endproc
 4036              	.LFE18:
 4038              		.align	2
 4039              		.global	fifo_init
 4041              	fifo_init:
 4042              	.LFB19:
 511:../proyecto.c **** 
 512:../proyecto.c **** /*******************************************************************/
 513:../proyecto.c **** 
 514:../proyecto.c **** void fifo_init( void )
 515:../proyecto.c **** {
 4043              		.loc 1 515 0
 4044              		.cfi_startproc
 4045              		@ Function supports interworking.
 4046              		@ args = 0, pretend = 0, frame = 0
 4047              		@ frame_needed = 1, uses_anonymous_args = 0
 4048 0f74 0DC0A0E1 		mov	ip, sp
 4049              	.LCFI38:
 4050              		.cfi_def_cfa_register 12
 4051 0f78 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4052 0f7c 04B04CE2 		sub	fp, ip, #4
 4053              		.cfi_offset 14, -8
 4054              		.cfi_offset 13, -12
 4055              		.cfi_offset 11, -16
 4056              	.LCFI39:
 4057              		.cfi_def_cfa 11, 4
 516:../proyecto.c ****     fifo.head = 0;
 4058              		.loc 1 516 0
 4059 0f80 28309FE5 		ldr	r3, .L117
 4060 0f84 0020A0E3 		mov	r2, #0
 4061 0f88 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 517:../proyecto.c ****     fifo.tail = 0;
 4062              		.loc 1 517 0
 4063 0f8c 1C309FE5 		ldr	r3, .L117
 4064 0f90 0020A0E3 		mov	r2, #0
 4065 0f94 B220C3E1 		strh	r2, [r3, #2]	@ movhi
 518:../proyecto.c ****     fifo.size = 0;
 4066              		.loc 1 518 0
 4067 0f98 10309FE5 		ldr	r3, .L117
 4068 0f9c 0020A0E3 		mov	r2, #0
 4069 0fa0 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 519:../proyecto.c **** }
 4070              		.loc 1 519 0
 4071 0fa4 0CD04BE2 		sub	sp, fp, #12
 4072 0fa8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4073 0fac 1EFF2FE1 		bx	lr
 4074              	.L118:
 4075              		.align	2
 4076              	.L117:
 4077 0fb0 00000000 		.word	fifo
 4078              		.cfi_endproc
 4079              	.LFE19:
 4081              		.align	2
 4082              		.global	fifo_enqueue
 4084              	fifo_enqueue:
 4085              	.LFB20:
 520:../proyecto.c **** 
 521:../proyecto.c **** void fifo_enqueue( pf_t pf )
 522:../proyecto.c **** {
 4086              		.loc 1 522 0
 4087              		.cfi_startproc
 4088              		@ Function supports interworking.
 4089              		@ args = 0, pretend = 0, frame = 8
 4090              		@ frame_needed = 1, uses_anonymous_args = 0
 4091 0fb4 0DC0A0E1 		mov	ip, sp
 4092              	.LCFI40:
 4093              		.cfi_def_cfa_register 12
 4094 0fb8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4095 0fbc 04B04CE2 		sub	fp, ip, #4
 4096              		.cfi_offset 14, -8
 4097              		.cfi_offset 13, -12
 4098              		.cfi_offset 11, -16
 4099              	.LCFI41:
 4100              		.cfi_def_cfa 11, 4
 4101 0fc0 08D04DE2 		sub	sp, sp, #8
 4102 0fc4 10000BE5 		str	r0, [fp, #-16]
 523:../proyecto.c ****     fifo.buffer[fifo.tail++] = pf;
 4103              		.loc 1 523 0
 4104 0fc8 9C309FE5 		ldr	r3, .L121
 4105 0fcc B230D3E1 		ldrh	r3, [r3, #2]	@ movhi
 4106 0fd0 0338A0E1 		mov	r3, r3, asl #16
 4107 0fd4 2338A0E1 		mov	r3, r3, lsr #16
 4108 0fd8 0310A0E1 		mov	r1, r3
 4109 0fdc 88209FE5 		ldr	r2, .L121
 4110 0fe0 021081E2 		add	r1, r1, #2
 4111 0fe4 10001BE5 		ldr	r0, [fp, #-16]
 4112 0fe8 010182E7 		str	r0, [r2, r1, asl #2]
 4113 0fec 013083E2 		add	r3, r3, #1
 4114 0ff0 0338A0E1 		mov	r3, r3, asl #16
 4115 0ff4 2328A0E1 		mov	r2, r3, lsr #16
 4116 0ff8 6C309FE5 		ldr	r3, .L121
 4117 0ffc B220C3E1 		strh	r2, [r3, #2]	@ movhi
 524:../proyecto.c ****     if( fifo.tail == BUFFER_LEN )
 4118              		.loc 1 524 0
 4119 1000 64309FE5 		ldr	r3, .L121
 4120 1004 B230D3E1 		ldrh	r3, [r3, #2]	@ movhi
 4121 1008 0338A0E1 		mov	r3, r3, asl #16
 4122 100c 2338A0E1 		mov	r3, r3, lsr #16
 4123 1010 020C53E3 		cmp	r3, #512
 4124 1014 0200001A 		bne	.L120
 525:../proyecto.c ****         fifo.tail = 0;
 4125              		.loc 1 525 0
 4126 1018 4C309FE5 		ldr	r3, .L121
 4127 101c 0020A0E3 		mov	r2, #0
 4128 1020 B220C3E1 		strh	r2, [r3, #2]	@ movhi
 4129              	.L120:
 526:../proyecto.c ****     INT_DISABLE;
 4130              		.loc 1 526 0
 4131              	@ 526 "../proyecto.c" 1
 4132 1024 00000FE1 		mrs   r0, cpsr
 4133              	@ 0 "" 2
 4134              	@ 526 "../proyecto.c" 1
 4135 1028 04002DE5 		stmfd sp!, {r0}
 4136              	@ 0 "" 2
 4137              	@ 526 "../proyecto.c" 1
 4138 102c C00080E3 		orr   r0, r0, #0b11000000
 4139              	@ 0 "" 2
 4140              	@ 526 "../proyecto.c" 1
 4141 1030 00F021E1 		msr   cpsr_c, r0
 4142              	@ 0 "" 2
 527:../proyecto.c ****     fifo.size++;
 4143              		.loc 1 527 0
 4144 1034 30309FE5 		ldr	r3, .L121
 4145 1038 B430D3E1 		ldrh	r3, [r3, #4]	@ movhi
 4146 103c 0338A0E1 		mov	r3, r3, asl #16
 4147 1040 2338A0E1 		mov	r3, r3, lsr #16
 4148 1044 013083E2 		add	r3, r3, #1
 4149 1048 0338A0E1 		mov	r3, r3, asl #16
 4150 104c 2328A0E1 		mov	r2, r3, lsr #16
 4151 1050 14309FE5 		ldr	r3, .L121
 4152 1054 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 528:../proyecto.c ****     INT_ENABLE;
 4153              		.loc 1 528 0
 4154              	@ 528 "../proyecto.c" 1
 4155 1058 04009DE4 		ldmfd sp!, {r0}
 4156              	@ 0 "" 2
 4157              	@ 528 "../proyecto.c" 1
 4158 105c 00F021E1 		msr   cpsr_c, r0
 4159              	@ 0 "" 2
 529:../proyecto.c **** }
 4160              		.loc 1 529 0
 4161 1060 0CD04BE2 		sub	sp, fp, #12
 4162 1064 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4163 1068 1EFF2FE1 		bx	lr
 4164              	.L122:
 4165              		.align	2
 4166              	.L121:
 4167 106c 00000000 		.word	fifo
 4168              		.cfi_endproc
 4169              	.LFE20:
 4171              		.align	2
 4172              		.global	fifo_dequeue
 4174              	fifo_dequeue:
 4175              	.LFB21:
 530:../proyecto.c **** 
 531:../proyecto.c **** pf_t fifo_dequeue( void )
 532:../proyecto.c **** {
 4176              		.loc 1 532 0
 4177              		.cfi_startproc
 4178              		@ Function supports interworking.
 4179              		@ args = 0, pretend = 0, frame = 8
 4180              		@ frame_needed = 1, uses_anonymous_args = 0
 4181 1070 0DC0A0E1 		mov	ip, sp
 4182              	.LCFI42:
 4183              		.cfi_def_cfa_register 12
 4184 1074 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4185 1078 04B04CE2 		sub	fp, ip, #4
 4186              		.cfi_offset 14, -8
 4187              		.cfi_offset 13, -12
 4188              		.cfi_offset 11, -16
 4189              	.LCFI43:
 4190              		.cfi_def_cfa 11, 4
 4191 107c 08D04DE2 		sub	sp, sp, #8
 533:../proyecto.c ****     pf_t pf;
 534:../proyecto.c ****     
 535:../proyecto.c ****     pf = fifo.buffer[fifo.head++];
 4192              		.loc 1 535 0
 4193 1080 A4309FE5 		ldr	r3, .L125
 4194 1084 B030D3E1 		ldrh	r3, [r3, #0]	@ movhi
 4195 1088 0338A0E1 		mov	r3, r3, asl #16
 4196 108c 2338A0E1 		mov	r3, r3, lsr #16
 4197 1090 0310A0E1 		mov	r1, r3
 4198 1094 90209FE5 		ldr	r2, .L125
 4199 1098 021081E2 		add	r1, r1, #2
 4200 109c 012192E7 		ldr	r2, [r2, r1, asl #2]
 4201 10a0 10200BE5 		str	r2, [fp, #-16]
 4202 10a4 013083E2 		add	r3, r3, #1
 4203 10a8 0338A0E1 		mov	r3, r3, asl #16
 4204 10ac 2328A0E1 		mov	r2, r3, lsr #16
 4205 10b0 74309FE5 		ldr	r3, .L125
 4206 10b4 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 536:../proyecto.c ****     if( fifo.head == BUFFER_LEN )
 4207              		.loc 1 536 0
 4208 10b8 6C309FE5 		ldr	r3, .L125
 4209 10bc B030D3E1 		ldrh	r3, [r3, #0]	@ movhi
 4210 10c0 0338A0E1 		mov	r3, r3, asl #16
 4211 10c4 2338A0E1 		mov	r3, r3, lsr #16
 4212 10c8 020C53E3 		cmp	r3, #512
 4213 10cc 0200001A 		bne	.L124
 537:../proyecto.c ****         fifo.head = 0;
 4214              		.loc 1 537 0
 4215 10d0 54309FE5 		ldr	r3, .L125
 4216 10d4 0020A0E3 		mov	r2, #0
 4217 10d8 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 4218              	.L124:
 538:../proyecto.c ****     INT_DISABLE;
 4219              		.loc 1 538 0
 4220              	@ 538 "../proyecto.c" 1
 4221 10dc 00000FE1 		mrs   r0, cpsr
 4222              	@ 0 "" 2
 4223              	@ 538 "../proyecto.c" 1
 4224 10e0 04002DE5 		stmfd sp!, {r0}
 4225              	@ 0 "" 2
 4226              	@ 538 "../proyecto.c" 1
 4227 10e4 C00080E3 		orr   r0, r0, #0b11000000
 4228              	@ 0 "" 2
 4229              	@ 538 "../proyecto.c" 1
 4230 10e8 00F021E1 		msr   cpsr_c, r0
 4231              	@ 0 "" 2
 539:../proyecto.c ****     fifo.size--;
 4232              		.loc 1 539 0
 4233 10ec 38309FE5 		ldr	r3, .L125
 4234 10f0 B430D3E1 		ldrh	r3, [r3, #4]	@ movhi
 4235 10f4 0338A0E1 		mov	r3, r3, asl #16
 4236 10f8 2338A0E1 		mov	r3, r3, lsr #16
 4237 10fc 013043E2 		sub	r3, r3, #1
 4238 1100 0338A0E1 		mov	r3, r3, asl #16
 4239 1104 2328A0E1 		mov	r2, r3, lsr #16
 4240 1108 1C309FE5 		ldr	r3, .L125
 4241 110c B420C3E1 		strh	r2, [r3, #4]	@ movhi
 540:../proyecto.c ****     INT_ENABLE;
 4242              		.loc 1 540 0
 4243              	@ 540 "../proyecto.c" 1
 4244 1110 04009DE4 		ldmfd sp!, {r0}
 4245              	@ 0 "" 2
 4246              	@ 540 "../proyecto.c" 1
 4247 1114 00F021E1 		msr   cpsr_c, r0
 4248              	@ 0 "" 2
 541:../proyecto.c ****     return pf;
 4249              		.loc 1 541 0
 4250 1118 10301BE5 		ldr	r3, [fp, #-16]
 542:../proyecto.c **** }
 4251              		.loc 1 542 0
 4252 111c 0300A0E1 		mov	r0, r3
 4253 1120 0CD04BE2 		sub	sp, fp, #12
 4254 1124 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4255 1128 1EFF2FE1 		bx	lr
 4256              	.L126:
 4257              		.align	2
 4258              	.L125:
 4259 112c 00000000 		.word	fifo
 4260              		.cfi_endproc
 4261              	.LFE21:
 4263              		.align	2
 4264              		.global	fifo_is_empty
 4266              	fifo_is_empty:
 4267              	.LFB22:
 543:../proyecto.c **** 
 544:../proyecto.c **** boolean fifo_is_empty( void )
 545:../proyecto.c **** {
 4268              		.loc 1 545 0
 4269              		.cfi_startproc
 4270              		@ Function supports interworking.
 4271              		@ args = 0, pretend = 0, frame = 0
 4272              		@ frame_needed = 1, uses_anonymous_args = 0
 4273 1130 0DC0A0E1 		mov	ip, sp
 4274              	.LCFI44:
 4275              		.cfi_def_cfa_register 12
 4276 1134 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4277 1138 04B04CE2 		sub	fp, ip, #4
 4278              		.cfi_offset 14, -8
 4279              		.cfi_offset 13, -12
 4280              		.cfi_offset 11, -16
 4281              	.LCFI45:
 4282              		.cfi_def_cfa 11, 4
 546:../proyecto.c ****     return (fifo.size == 0);
 4283              		.loc 1 546 0
 4284 113c 28309FE5 		ldr	r3, .L128
 4285 1140 B430D3E1 		ldrh	r3, [r3, #4]	@ movhi
 4286 1144 0338A0E1 		mov	r3, r3, asl #16
 4287 1148 2338A0E1 		mov	r3, r3, lsr #16
 4288 114c 000053E3 		cmp	r3, #0
 4289 1150 0030A013 		movne	r3, #0
 4290 1154 0130A003 		moveq	r3, #1
 4291 1158 FF3003E2 		and	r3, r3, #255
 547:../proyecto.c **** }
 4292              		.loc 1 547 0
 4293 115c 0300A0E1 		mov	r0, r3
 4294 1160 0CD04BE2 		sub	sp, fp, #12
 4295 1164 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4296 1168 1EFF2FE1 		bx	lr
 4297              	.L129:
 4298              		.align	2
 4299              	.L128:
 4300 116c 00000000 		.word	fifo
 4301              		.cfi_endproc
 4302              	.LFE22:
 4304              		.align	2
 4305              		.global	fifo_is_full
 4307              	fifo_is_full:
 4308              	.LFB23:
 548:../proyecto.c **** 
 549:../proyecto.c **** boolean fifo_is_full( void )
 550:../proyecto.c **** {
 4309              		.loc 1 550 0
 4310              		.cfi_startproc
 4311              		@ Function supports interworking.
 4312              		@ args = 0, pretend = 0, frame = 0
 4313              		@ frame_needed = 1, uses_anonymous_args = 0
 4314 1170 0DC0A0E1 		mov	ip, sp
 4315              	.LCFI46:
 4316              		.cfi_def_cfa_register 12
 4317 1174 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4318 1178 04B04CE2 		sub	fp, ip, #4
 4319              		.cfi_offset 14, -8
 4320              		.cfi_offset 13, -12
 4321              		.cfi_offset 11, -16
 4322              	.LCFI47:
 4323              		.cfi_def_cfa 11, 4
 551:../proyecto.c ****     return (fifo.size == BUFFER_LEN-1);
 4324              		.loc 1 551 0
 4325 117c 2C309FE5 		ldr	r3, .L131
 4326 1180 B430D3E1 		ldrh	r3, [r3, #4]	@ movhi
 4327 1184 0338A0E1 		mov	r3, r3, asl #16
 4328 1188 2328A0E1 		mov	r2, r3, lsr #16
 4329 118c 20309FE5 		ldr	r3, .L131+4
 4330 1190 030052E1 		cmp	r2, r3
 4331 1194 0030A013 		movne	r3, #0
 4332 1198 0130A003 		moveq	r3, #1
 4333 119c FF3003E2 		and	r3, r3, #255
 552:../proyecto.c **** }
 4334              		.loc 1 552 0
 4335 11a0 0300A0E1 		mov	r0, r3
 4336 11a4 0CD04BE2 		sub	sp, fp, #12
 4337 11a8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4338 11ac 1EFF2FE1 		bx	lr
 4339              	.L132:
 4340              		.align	2
 4341              	.L131:
 4342 11b0 00000000 		.word	fifo
 4343 11b4 FF010000 		.word	511
 4344              		.cfi_endproc
 4345              	.LFE23:
 4347              		.data
 4348              		.align	1
 4351              	cont5ticks.4283:
 4352 0000 0500     		.short	5
 4353              		.align	1
 4356              	contTicks.4282:
 4357 0002 3200     		.short	50
 4360              	init.4240:
 4361 0004 01       		.byte	1
 4362              		.bss
 4363              	state.4245:
 4364 0000 00       		.space	1
 4365              		.data
 4368              	init.4227:
 4369 0005 01       		.byte	1
 4370              		.bss
 4371              	state.4232:
 4372 0001 00       		.space	1
 4373              		.text
 4374              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 proyecto.c
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2201   .rodata:00000000 firemen
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2198   .rodata:00000000 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2219   .rodata:00000020 dummy
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2285   .rodata:000000c0 crash
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2303   .rodata:000000e0 life
                            *COM*:00000808 fifo
                            *COM*:00000001 gameOver
                            *COM*:00000001 dummyPos
                            *COM*:00000002 count
                            *COM*:00000001 firemenPos
                            *COM*:00000001 vidas
                            *COM*:00000001 pscancode
                            *COM*:00000001 keyscancode
                            *COM*:00000001 vDummy
                            *COM*:00000001 posCrash
                            *COM*:00000001 final
                            *COM*:00000001 pause
                            *COM*:00000001 inicio
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2343   .text:00000000 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2346   .text:00000000 main
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4041   .text:00000f74 fifo_init
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4174   .text:00001070 fifo_dequeue
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4266   .text:00001130 fifo_is_empty
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2462   .text:0000010c $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3593   .text:00000af0 isr_tick
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2474   .text:00000130 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2477   .text:00000130 dummy_init
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3715   .text:00000c28 sprite_plot
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2517   .text:00000178 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2524   .text:00000188 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2527   .text:00000188 dummy_move
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3775   .text:00000cc0 sprite_clear
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4084   .text:00000fb4 fifo_enqueue
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2589   .text:00000218 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3514   .text:00000a48 count_inc
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2595   .text:00000224 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2598   .text:00000224 dummy_dead
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2744   .text:000003ac $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3361   .text:000008f0 efecto_muerte
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3325   .text:000008c4 sonido_cama
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2756   .text:000003d0 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2759   .text:000003d0 firemen_move
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2844   .text:000004ac $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2850   .text:000004b8 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2853   .text:000004b8 pulsadores
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2961   .text:000005b4 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4368   .data:00000005 init.4227
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4371   .bss:00000001 state.4232
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2968   .text:000005c4 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:2971   .text:000005c4 keypad
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3095   .text:000006f0 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4360   .data:00000004 init.4240
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4363   .bss:00000000 state.4245
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3106   .text:00000704 reinicio
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3103   .text:00000704 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3471   .text:00000a04 count_init
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3196   .text:000007dc $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3213   .text:00000800 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3216   .text:00000800 pantalla_final
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3276   .text:0000087c $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3286   .text:00000898 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3289   .text:00000898 sonido_move
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3318   .text:000008c0 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3322   .text:000008c4 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3354   .text:000008ec $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3358   .text:000008f0 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3453   .text:000009d4 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3468   .text:00000a04 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3506   .text:00000a40 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3511   .text:00000a48 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3583   .text:00000ae0 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3590   .text:00000af0 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3698   .text:00000bfc $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4351   .data:00000000 cont5ticks.4283
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4356   .data:00000002 contTicks.4282
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3712   .text:00000c28 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3826   .text:00000d34 lcd_putBmp
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3968   .text:00000ed0 lcd_clearWindow
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3961   .text:00000ecc $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:3965   .text:00000ed0 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4077   .text:00000fb0 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4081   .text:00000fb4 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4167   .text:0000106c $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4171   .text:00001070 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4259   .text:0000112c $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4263   .text:00001130 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4300   .text:0000116c $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4304   .text:00001170 $a
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4307   .text:00001170 fifo_is_full
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4342   .text:000011b0 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4348   .data:00000000 $d
C:\Users\VUser\AppData\Local\Temp\ccOiWCBN.s:4364   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sys_init
timers_init
lcd_init
uda1341ts_init
iis_init
uda1341ts_setvol
lcd_on
lcd_clear
lcd_putWallpaper
lcd_puts
timer0_open_tick
sleep
timer0_close
segs_putchar
pb_pressed
pb_scan
keypad_pressed
keypad_scan
iis_play
lcd_putint_x2
lcd_buffer
lcd_putpixel
